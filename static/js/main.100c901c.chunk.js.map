{"version":3,"sources":["libs/history/history.ts","axios/axios.ts","context/Context.tsx","api/authApi/authApi.tsx","components/molecules/Login/Login.tsx","components/organisms/AdminMenu/AdminMenu.tsx","api/objectApi/objectApi.tsx","components/atoms/Loader/Loader.tsx","components/molecules/ObjectList/ObjectList.tsx","components/organisms/UserMenu/UserMenu.tsx","components/molecules/CurrentObject/CurrentObject.tsx","components/molecules/AddWorkerTime/AddWorkerTime.tsx","api/userListApi/userListApi.tsx","components/molecules/AdminCreateUser/AdminCreateUser.tsx","api/workListApi/workListApi.tsx","api/materialListApi/materialListApi.tsx","components/molecules/CreateObject/CreateObject.tsx","components/molecules/EditObject/EditObject.tsx","api/instrumentListApi/instrumentListApi.tsx","components/atoms/InventoryAddModal/InventoryAddModal.tsx","components/atoms/InventoryDeleteModal/InventoryDeleteModal.tsx","components/molecules/InventoryList/InventoryList.tsx","components/molecules/ProfileAddMat/ProfileAddMat.tsx","components/molecules/ProfileEditMat/ProfileEditMat.tsx","components/atoms/UserDeleteModal/UserDeleteModal.tsx","components/molecules/UserList/UserList.tsx","components/molecules/UserProfile/UserProfile.tsx","components/molecules/WaitingObjectList/WaitingObjectList.tsx","components/atoms/WerehouseAddModal/WerehouseAddModal.tsx","components/atoms/WerehouseDeleteModal/WerehouseDeleteModal.tsx","components/molecules/WerehouseList/WerehouseList.tsx","components/atoms/WorkAddModal/WorkAddModal.tsx","components/atoms/WorkDeleteModal/WorkDeleteModal.tsx","components/molecules/WorkList/WorkList.tsx","components/molecules/SalaryList/SalaryList.tsx","router/routes.tsx","components/templates/Main/Main.tsx","index.tsx"],"names":["history","createBrowserHistory","axios","$axios","create","cancelToken","CancelToken","defaults","headers","load","post","baseURL","interceptors","response","use","error","isCancel","Promise","reject","cancel","message","status","remove","path","push","getRoute","routes","query","user_not_found","data","detail","permissions_guard","axiosHeadersUpdater","token","common","Authorization","defaultValue","logout","setLogout","userLogin","undefined","setUserLogin","refreshToken","setRefreshToken","salaryList","setSalaryList","Context","React","createContext","ProviderContext","props","children","useState","useEffect","Provider","value","baseUrl","authApi","params","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useRequest","request","loading","useHistory","access","refresh","cookies","save","className","name","initialValues","remember","onFinish","values","username","length","password","e","console","log","onFinishFailed","errorInfo","Item","label","rules","required","Password","valuePropName","type","htmlType","AdminMenu","showMenu","setShowMenu","document","getElementsByTagName","style","overflowY","closeMenu","route","prevState","window","onclick","event","target","matches","handleMenuClick","info","menu1","onClick","key","menu2","src","alt","localStorage","clear","overlay","DownOutlined","width","marginBottom","mode","theme","icon","PieChartOutlined","DesktopOutlined","ContainerOutlined","MailOutlined","title","AppstoreOutlined","objectApi","getObjectList","action","get","c","createObject","Loader","ObjectList","Search","Input","check","setCheck","searchValue","setSearchValue","objectList","setObjectList","fetch","results","placeholder","allowClear","enterButton","onSearch","map","item","id","objectId","date_ending","substring","executors","fullname","exercises","count","price","materials","prepaid","total_price","UserMenu","CurrentObject","object_name","object_description","object_workers","object_work_description","work","quantity","object_work_material","object_work_detail_price","object_work_avans","object_work_price","index","AddWorkerTime","useParams","workerListOptions","List","fields","add","field","display","align","fieldKey","showArrow","options","min","max","MinusCircleOutlined","block","PlusOutlined","userListApi","getUserList","updateUserList","getUserById","updateUserById","put","deleteUserById","delete","getUserProfile","AdminCreateUser","user_name","gender","user_sex","toUpperCase","phone","user_phone","idnp","user_idno","is_admin","is_staff","user_value","is_agent","salary_percent","is_basic","hour_price","salary_hour","hour_tax","agent_rate","Group","workListApi","getWorkList","createWorkItem","getWorkItem","updateWorkItem","deleteWorkItem","materialListApi","getMaterialList","createMaterialItem","getMaterialItem","updateMaterialItem","deleteMaterialItem","workerRender","closable","onClose","color","marginRight","marginTop","validateMessages","CreateObject","requestProfile","dataProfile","requestWorkList","dataWorkList","requestMaterialList","dataMaterialList","requestUsersList","dataUsersList","dateFormat","require","setValue","hold","setHold","workList","setWorkList","materialList","setMaterialList","usersList","setUsersList","Date","startDate","setStartDate","keys","object","user","state","discount","owner","autoComplete","selected","onChange","date","tagRender","prev","danger","EditObject","test","setTest","workerPriceListOptions","TextArea","instrumentListApi","getInstrumentList","createInstrumentItem","getInstrumentItem","updateInstrumentItem","deleteInstrumentItem","InventoryAddModal","onShow","onRefresh","errors","requestInventoryItem","dataInventoryItem","requestEdit","loadingEdit","setTitle","setPrice","setCount","onEdit","a","parseFloat","onFetch","visible","onOk","confirmLoading","onCancel","InventoryDeleteModal","onDelete","InventoryList","setVisible","deleteVisible","setDeleteVisible","inventoryList","setInventoryList","editId","setEditId","onShowModal","ProfileAddMat","userId","requestInventory","dataInventory","requestMaterial","dataMaterial","ProfileEditMat","UserDeleteModal","UserList","dataUserList","userList","setUserList","deleteId","setDeleteId","toLowerCase","UserProfile","userData","types","email","disabled","WaitingObjectList","WerehouseAddModal","sellPrice","setSellPrice","WerehouseDeleteModal","WerehouseList","werehouseList","setWerehouseList","materialId","setMaterialId","mat_id","WorkAddModal","WorkDeleteModal","WorkList","workId","setWorkId","setDataWorkList","SalaryList","exact","component","Main","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.100c901c.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory<{ location: { pathname: string } }>(\n  {}\n);\n","import $axios from 'axios';\n// import env from '@beam-australia/react-env';\nimport { load, save, remove } from 'react-cookies';\nimport { getRoute } from 'estafette-router';\nimport { routes } from '../router/routes';\nimport { history } from 'libs/history/history';\n\nexport const axios = $axios.create();\n// eslint-disable-next-line import/no-named-as-default-member\nexport const cancelToken = $axios.CancelToken;\n\naxios.defaults.headers['Accept-Language'] = load('localization') || 'en';\naxios.defaults.headers.post['Content-Type'] =\n  'application/x-www-form-urlencoded';\naxios.defaults.baseURL = 'https://genergy-backend.herokuapp.com';\n// axios.defaults.baseURL = env('API_URL');\n\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if ($axios.isCancel(error)) {\n      // eslint-disable-next-line\n      return Promise.reject({\n        cancel: true,\n        message: 'The endpoint was cancelled'\n      });\n    }\n\n    if (error.response) {\n      if (error.response.status === 401) {\n        remove('token', { path: '/' });\n        history.push(\n          getRoute(routes, 'Login', { query: { user_not_found: true } })\n        );\n      }\n\n      if (\n        error.response.status === 403 &&\n        error.response.data.detail ===\n          'You do not have permission to perform this action.'\n      ) {\n        history.push(\n          getRoute(routes, 'Login', { query: { permissions_guard: true } })\n        );\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport const axiosHeadersUpdater = (): void => {\n  const token = load('token');\n\n  if (token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else if (axios.defaults.headers.common.Authorization) {\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\naxiosHeadersUpdater();\n","import React, { useEffect, useState, ReactNode } from 'react';\nimport cookies, { load } from 'react-cookies';\nimport { remove } from 'react-cookies';\nimport { axiosHeadersUpdater } from 'axios/axios';\n\nexport interface Props {\n  logout: boolean;\n  setLogout: React.Dispatch<React.SetStateAction<boolean>>;\n  userLogin: boolean | undefined;\n  setUserLogin: React.Dispatch<React.SetStateAction<boolean | undefined>>;\n  refreshToken: string | undefined;\n  setRefreshToken: React.Dispatch<React.SetStateAction<string | undefined>>;\n  salaryList: SalaryList[];\n  setSalaryList: React.Dispatch<React.SetStateAction<SalaryList[]>>;\n}\n\nexport interface SalaryList {\n  name: string;\n  sex: string;\n  phone: string;\n  salary: number;\n  avans: number;\n}\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nconst defaultValue = {\n  logout: false,\n  setLogout: () => {},\n  userLogin: undefined,\n  setUserLogin: () => {},\n  refreshToken: undefined,\n  setRefreshToken: () => {},\n  salaryList: [],\n  setSalaryList: () => {}\n};\n\nexport const Context = React.createContext<Props>(defaultValue);\n\nexport const ProviderContext = (props: ProviderProps) => {\n  const children = props.children;\n\n  const [logout, setLogout] = useState<boolean>(false);\n  const [userLogin, setUserLogin] = useState<boolean | undefined>(undefined);\n  const [salaryList, setSalaryList] = useState<SalaryList[]>([]);\n  const [refreshToken, setRefreshToken] = useState<string | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    if (load('token')) {\n      setUserLogin(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (load('token')) {\n      axiosHeadersUpdater();\n    } else {\n      remove('token', { path: '/' });\n      remove('refresh_token', { path: '/' });\n      setUserLogin(undefined);\n      axiosHeadersUpdater();\n    }\n  }, [userLogin]);\n\n  return (\n    <Context.Provider\n      value={{\n        logout,\n        setLogout,\n        userLogin,\n        setUserLogin,\n        refreshToken,\n        setRefreshToken,\n        salaryList,\n        setSalaryList\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import axios from 'axios';\n\nconst baseUrl = 'https://genergy-backend.herokuapp.com';\n\nexport const authApi = {\n  authLogin: (params: {}) =>\n    axios.post(`${baseUrl}/accounts/auth/login`, params), // JWT authorization login\n\n  authVerify: (params: {}) =>\n    axios.post(`${baseUrl}/accounts/auth/verify`, params), // JWT authorization verify\n\n  authRefresh: (params: {}) =>\n    axios.post(`${baseUrl}/accounts/auth/refresh`, params) // JWT authorization refresh\n};\n","import * as React from 'react';\nimport cookies from 'react-cookies';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useRequest } from 'estafette';\nimport { useHistory } from 'estafette-router';\nimport { Context } from 'context/Context';\nimport { authApi } from 'api/authApi/authApi';\n\nimport './Login.scss';\n\ninterface Token {\n  access: string;\n  refresh: string;\n}\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nexport const Login = () => {\n  const { request, data, loading } = useRequest<Token>({ data: {} });\n  const { push } = useHistory();\n  const { setUserLogin } = React.useContext(Context);\n\n  const onRedirect = () => push('AdminPage');\n\n  const onLogin = () => push('Login');\n\n  const onFinish = (values: any) => {\n    if (values.username.length > 4 && values.password.length > 4) {\n      try {\n        request(\n          authApi.authLogin({\n            username: values.username,\n            password: values.password\n          })\n        );\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  React.useEffect(() => {\n    if (data.access && data.refresh) {\n      setUserLogin(true);\n\n      // const expirationDate = new Date();\n      // expirationDate.setHours(expirationDate.getHours() + 3);\n\n      cookies.save('token', data.access, {\n        path: '/'\n        // expires: expirationDate\n      });\n\n      // cookies.save('refresh_token', data.refresh, {\n      //   path: '/'\n      // });\n\n      onRedirect();\n    }\n  }, [data]);\n\n  return (\n    <div className=\"auth-container\">\n      <h1>Авторизация</h1>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: false\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your username!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!'\n            }\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Dropdown, Button, Menu, message } from 'antd';\nimport {\n  AppstoreOutlined,\n  ContainerOutlined,\n  DesktopOutlined,\n  DownOutlined,\n  MailOutlined,\n  PieChartOutlined\n} from '@ant-design/icons';\nimport { remove } from 'react-cookies';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { useHistory } from 'estafette-router';\n\nimport './AdminMenu.scss';\n\nexport const AdminMenu = () => {\n  const { push } = useHistory();\n  const [showMenu, setShowMenu] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (showMenu) {\n      document.getElementsByTagName('body')[0].style.overflowY = 'hidden';\n    } else {\n      document.getElementsByTagName('body')[0].style.overflowY = 'auto';\n    }\n  }, [showMenu]);\n\n  const closeMenu = (route: any) => {\n    setShowMenu((prevState) => !prevState);\n    return route;\n  };\n\n  window.onclick = (event: any) => {\n    if (event.target.matches('.menu-bg')) {\n      setShowMenu(false);\n    }\n  };\n\n  const handleMenuClick = (e: any) => {\n    message.info('Click on menu item.');\n    console.log('click', e);\n  };\n\n  const onLogout = () => {\n    localStorage.clear();\n    remove('token', { path: '/' });\n    remove('refresh_token', { path: '/' });\n    push('Logout');\n  };\n\n  const menu1 = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"1\" onClick={() => push('InventoryListPage')}>\n        <span>Список инвентаря</span>\n      </Menu.Item>\n      <Menu.Item key=\"2\" onClick={() => push('WerehouseListPage')}>\n        <span>Список материалов</span>\n      </Menu.Item>\n      <Menu.Item key=\"3\" onClick={() => push('UserListPage')}>\n        <span>Список персонала</span>\n      </Menu.Item>\n    </Menu>\n  );\n\n  const menu2 = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"4\" onClick={() => push('SalaryListPage')}>\n        <span>Список зарплат</span>\n      </Menu.Item>\n      <Menu.Item key=\"5\" onClick={() => push('ObjectListPage')}>\n        <span>Список обьектов</span>\n      </Menu.Item>\n      <Menu.Item key=\"6\" onClick={() => push('WaitingObjectListPage')}>\n        <span>Cписок ожидания</span>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <>\n      {showMenu && <div className=\"menu-bg\"></div>}\n\n      <div className=\"container\">\n        <div className=\"company-logo\">\n          <img src=\"assets/img/logo.png\" alt=\"logo\" />\n          <Button className=\"logout-button\" onClick={() => onLogout()}>\n            Выйти\n          </Button>\n        </div>\n\n        <div className=\"header\">\n          <div className=\"header-line\">\n            <Button onClick={() => push('UserProfilePage')}>\n              <span>Admin</span>\n            </Button>\n            <Button onClick={() => push('CurrentObjectPage')}>\n              <span>Текущие объекты</span>\n            </Button>\n            <Button onClick={() => push('CreateObjectPage')}>\n              <span>Создать объект</span>\n            </Button>\n            <Button onClick={() => push('WorkListPage')}>\n              <span>Список работ</span>\n            </Button>\n            <Button onClick={() => push('AdminCreateUserPage')}>\n              <span>Создать пользователя</span>\n            </Button>\n\n            <Dropdown overlay={menu2}>\n              <Button>\n                Списки Зп./Объе./Ожид.\n                <DownOutlined />\n              </Button>\n            </Dropdown>\n\n            <Dropdown overlay={menu1}>\n              <Button>\n                Списки Инв./Мат./Пер. <DownOutlined />\n              </Button>\n            </Dropdown>\n          </div>\n        </div>\n        <div className=\"media-menu\" style={{ width: 300 }}>\n          <Button\n            className={`menu-btn ${showMenu ? 'active-btn' : 'disabled-btn'}`}\n            type=\"primary\"\n            onClick={closeMenu}\n            style={{ marginBottom: 16 }}\n          >\n            Меню\n          </Button>\n\n          {showMenu && (\n            <Menu mode=\"inline\" theme=\"light\" className=\"media-menu-options\">\n              <Menu.Item\n                key=\"1\"\n                icon={<PieChartOutlined />}\n                onClick={() => push('UserProfilePage')}\n              >\n                <span>Admin</span>\n              </Menu.Item>\n\n              <Menu.Item\n                key=\"2\"\n                icon={<DesktopOutlined />}\n                onClick={() => push('CurrentObjectPage')}\n              >\n                <span>Текущие объекты</span>\n              </Menu.Item>\n\n              <Menu.Item\n                key=\"3\"\n                icon={<ContainerOutlined />}\n                onClick={() => push('CreateObjectPage')}\n              >\n                <span>Создать объект</span>\n              </Menu.Item>\n\n              <Menu.Item\n                key=\"4\"\n                icon={<ContainerOutlined />}\n                onClick={() => push('WorkListPage')}\n              >\n                <span>Список работ</span>\n              </Menu.Item>\n\n              <Menu.Item\n                key=\"5\"\n                icon={<ContainerOutlined />}\n                onClick={() => push('AdminCreateUserPage')}\n              >\n                <span>Создать пользователя</span>\n              </Menu.Item>\n\n              <SubMenu\n                key=\"sub1\"\n                icon={<MailOutlined />}\n                title=\"Списки Зп./Объе./Ожид.\"\n              >\n                <Menu.Item key=\"6\" onClick={() => push('InventoryListPage')}>\n                  <span>Список инвентаря</span>\n                </Menu.Item>\n                <Menu.Item key=\"7\" onClick={() => push('WerehouseListPage')}>\n                  <span>Список материалов</span>\n                </Menu.Item>\n                <Menu.Item key=\"8\" onClick={() => push('UserListPage')}>\n                  <span>Список персонала</span>\n                </Menu.Item>\n              </SubMenu>\n\n              <SubMenu\n                key=\"sub2\"\n                icon={<AppstoreOutlined />}\n                title=\"Списки Инв./Мат./Пер.\"\n              >\n                <Menu.Item\n                  key=\"9\"\n                  onClick={() => closeMenu(push('SalaryListPage'))}\n                >\n                  <span>Список зарплат</span>\n                </Menu.Item>\n                <Menu.Item\n                  key=\"10\"\n                  onClick={() => closeMenu(push('ObjectListPage'))}\n                >\n                  <span>Список обьектов</span>\n                </Menu.Item>\n                <Menu.Item\n                  key=\"11\"\n                  onClick={() => closeMenu(push('WaitingObjectListPage'))}\n                >\n                  <span>Cписок ожидания</span>\n                </Menu.Item>\n              </SubMenu>\n            </Menu>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Canceler } from 'axios';\nimport { axios, cancelToken } from 'axios/axios';\n\nexport const objectApi = {\n  getObjectList: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.get(`/projects/projects/${params ? `?search=${params}` : ``}`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (objectApi.getObjectList.cancel = c) // Get object list\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  createObject: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.post(`/projects/projects/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (objectApi.createObject.cancel = c) // Create object\n        )\n      }),\n    cancel: (() => null) as Canceler\n  }\n};\n","import React from 'react';\nimport '../Loader/Loader.scss';\n\nexport const Loader = () => {\n  return <div className=\"loader\" />;\n};\n","import * as React from 'react';\nimport { Button, Input } from 'antd';\nimport { useHistory } from 'estafette-router';\nimport { useRequest } from 'estafette';\nimport { objectApi } from 'api/objectApi/objectApi';\nimport { Loader } from 'components/atoms/Loader/Loader';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './ObjectList.scss';\n\nexport const ObjectList = () => {\n  const { push } = useHistory();\n  const { Search } = Input;\n  const { request, data, loading } = useRequest<any>();\n\n  const [check, setCheck] = React.useState<boolean>(false);\n  const [searchValue, setSearchValue] = React.useState<string>('');\n  const [objectList, setObjectList] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    fetch();\n    setCheck(true);\n  }, []);\n\n  React.useEffect(() => {\n    if (check) {\n      fetch();\n    }\n  }, [searchValue]);\n\n  React.useEffect(() => {\n    if (data.results) {\n      setObjectList(data.results);\n    }\n  }, [data]);\n\n  const fetch = () => {\n    request(objectApi.getObjectList.action(searchValue));\n  };\n\n  const onSearch = (value: string) => setSearchValue(value);\n\n  console.log(data.results, 'results');\n\n  return (\n    <div className=\"object-list\">\n      <AdminMenu />\n      <div className=\"object-list__title\">\n        <span>Список обьектов</span>\n\n        <Search\n          placeholder=\"Введите текст\"\n          allowClear\n          enterButton=\"Поиск\"\n          onSearch={onSearch}\n          className=\"search-input\"\n          loading={loading}\n        />\n      </div>\n      <div className=\"object-list__items\">\n        {loading ? (\n          <Loader />\n        ) : (\n          objectList.map((item: any) => (\n            <div className=\"object_item\" key={item.id}>\n              <div className=\"object_item__title\">\n                <span>Название: {item.title}</span>\n                <div className=\"buttons-group\">\n                  <Button\n                    className=\"close-object\"\n                    onClick={() =>\n                      push('EditObjectPage', { objectId: item.id })\n                    }\n                  >\n                    Редактировать\n                  </Button>\n\n                  <Button\n                    className=\"close-object\"\n                    onClick={() =>\n                      push('AddWorkerTimePage', { objectId: item.id })\n                    }\n                  >\n                    Время +/-\n                  </Button>\n\n                  <Button className=\"close-object\">Закрыть</Button>\n                </div>\n              </div>\n\n              <div className=\"object_item__description\">\n                <span>Дата завершения объекта</span>\n                <br />\n                {item.date_ending\n                  ? item.date_ending.substring(0, 10)\n                  : 'нету даты'}\n              </div>\n\n              <div className=\"object_item__workers\">\n                <div className=\"workers-list\">\n                  <span>Список работников</span>\n                  <ul>\n                    {item.executors.map((item: any) => (\n                      <li key={item.id}>{item.fullname || 'нет имени'}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"object_work-detail\">\n                <span>Описание работ</span>\n\n                {item.exercises.map((item: any) => (\n                  <div\n                    className=\"object_work-detail__description\"\n                    key={item.id}\n                  >\n                    <span>{item.title || 'нет названия'}</span> - {item.count}{' '}\n                    шт - {item.price || 'нет ценны'} лей.\n                  </div>\n                ))}\n\n                <span>Описание материалов</span>\n\n                {item.materials.map((item: any) => (\n                  <div\n                    className=\"object_work-detail__description\"\n                    key={item.id}\n                  >\n                    <span>{item.title || 'нет названия'}</span> - {item.count}{' '}\n                    шт - {item.price || 'нет ценны'} лей.\n                  </div>\n                ))}\n\n                {/* <div className=\"object_work-detail__price\">\n                Примерно {item.object_work_detail_price} лей.\n              </div> */}\n              </div>\n              <div className=\"object_avans\">Аванс {item.prepaid} лей.</div>\n              <div className=\"object_price\">\n                Стоимость обьекта {item.total_price} лей.\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { ObjectList } from 'components/molecules/ObjectList/ObjectList';\nimport { useHistory } from 'estafette-router';\n\nimport './UserMenu.scss';\n\nexport const UserMenu = () => {\n  const { push } = useHistory();\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <ul className=\"header-line\">\n          <li>User</li>\n          <li>\n            <span onClick={() => push('CreateObjectPage')}>Создать обьект</span>\n          </li>\n          <li>\n            <span onClick={() => push('WorkListPage')}>Список работ</span>\n          </li>\n        </ul>\n      </div>\n      <div className=\"content\">\n        <ObjectList />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button } from 'antd';\nimport { useHistory } from 'estafette-router';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './CurrentObject.scss';\n\nexport const CurrentObject = () => {\n  const { push } = useHistory();\n  const objectList = [\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    }\n  ];\n\n  return (\n    <div className=\"current-object-list\">\n      <AdminMenu />\n      <div className=\"current-object-list__title\">Список текущих обьектов</div>\n      <div className=\"current-object-list__items\">\n        {objectList.map((item, index) => (\n          <div className=\"current-object_item\" key={index}>\n            <div className=\"current-object_item__title\">\n              <span className=\"object-name\">Название: {item.object_name}</span>\n              <div className=\"buttons-group\">\n                <Button\n                  className=\"close-object\"\n                  onClick={() => push('EditObjectPage')}\n                >\n                  Редактировать\n                </Button>\n\n                <Button\n                  className=\"close-object\"\n                  onClick={() => push('AddWorkerTimePage')}\n                >\n                  Время +/-\n                </Button>\n\n                <Button className=\"close-object\">Закрыть???</Button>\n              </div>\n            </div>\n            <div className=\"current-object_item__description\">\n              <span>Описание объекта</span>\n              <br />\n              {item.object_description}\n            </div>\n            <div className=\"current-object_item__workers\">\n              <div className=\"workers-list\">\n                <span>Список работников</span>\n                <ul>\n                  {item.object_workers.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <div className=\"current-object_work-detail\">\n              <span>Описание работ</span>\n              {item.object_work_description.map((item: any) => (\n                <div className=\"current-object_work-detail__description\">\n                  <span>{item.work}</span> - {item.quantity}шт - {item.price}\n                  лей.\n                </div>\n              ))}\n\n              <span>Описание материалов</span>\n              {item.object_work_material.map((item: any) => (\n                <div className=\"current-object_work-detail__description\">\n                  <span>{item.title}</span> - {item.quantity}шт - {item.price}\n                  лей.\n                </div>\n              ))}\n\n              {/* <div className=\"object_work-detail__price\">\n                            Примерно {item.object_work_detail_price} лей.\n                        </div> */}\n            </div>\n            <div className=\"current-object_avans\">\n              Аванс {item.object_work_avans} лей.\n            </div>\n            <div className=\"current-object_price\">\n              Стоимость обьекта {item.object_work_price} лей.\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Form, InputNumber, Select, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useParams } from 'estafette-router';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './AddWorkerTime.scss';\n\nexport const AddWorkerTime = () => {\n  const { objectId } = useParams<any>();\n  const workerListOptions = [\n    { value: 'Ваня' },\n    { value: 'Петя' },\n    { value: 'Саша' },\n    { value: 'Дима' }\n  ];\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form:', values);\n  };\n\n  return (\n    <div className=\"worker-time-container\">\n      <AdminMenu />\n      <h1>Выставить время на объекте</h1>\n      <Form onFinish={onFinish} className=\"form-add-time\">\n        <Form.List name={['object', 'object_worker_time']}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'name']}\n                    fieldKey={[field.fieldKey, 'name']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Название работы обязательно!'\n                      }\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Выберите\"\n                      showArrow\n                      className=\"time-select\"\n                      options={workerListOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'hour']}\n                    fieldKey={[field.fieldKey, 'hour']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Количество не меньше 0',\n                        min: 0,\n                        max: 999,\n                        type: 'number'\n                      }\n                    ]}\n                  >\n                    <InputNumber placeholder=\"кол-во\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Добавить время работнику\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"object-submit-btn\"\n          >\n            Сохранить\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import { Canceler } from 'axios';\nimport { axios, cancelToken } from 'axios/axios';\n\nexport const userListApi = {\n  getUserList: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.get(`/accounts/users/${params ? `?search=${params}` : ``}`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (userListApi.getUserList.cancel = c) // User list create\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n\n  updateUserList: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.post(`/accounts/users/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (userListApi.updateUserList.cancel = c) // User list update (create)\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n\n  getUserById: {\n    action: (params = {}): Promise<{ data: any }> =>\n      axios.get(`/accounts/users/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (userListApi.getUserById.cancel = c) // User retrieve by id\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n\n  updateUserById: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.put(`/accounts/users/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (userListApi.updateUserById.cancel = c) // User update by id\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n\n  deleteUserById: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.delete(`/accounts/users/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (userListApi.deleteUserById.cancel = c) // User delete\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n\n  getUserProfile: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.get(`/accounts/users/me/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (userListApi.getUserProfile.cancel = c) // User profile\n        )\n      }),\n    cancel: (() => null) as Canceler\n  }\n};\n","import * as React from 'react';\nimport { Form, Input, Button, Radio, Switch } from 'antd';\nimport { useRequest } from 'estafette';\nimport { userListApi } from 'api/userListApi/userListApi';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './AdminCreateUser.scss';\n\ninterface Form {\n  hour_tax: number;\n  password: string;\n  salary_hour: boolean;\n  salary_percent: boolean;\n  user_idno: string;\n  user_name: string;\n  user_phone: string;\n  user_sex: string;\n  user_value: number;\n  username: string;\n}\nexport const layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nexport const AdminCreateUser = () => {\n  const { request, loading } = useRequest();\n\n  const onFinish = (values: any) => {\n    console.log(values);\n    if (values) {\n      const params = {\n        username: values.user_name,\n        password: values.password,\n        fullname: values.username,\n        gender: values.user_sex.toUpperCase(),\n        phone: values.user_phone || '',\n        idnp: values.user_idno || '',\n        is_admin: false,\n        is_staff: values.user_value === 2 ? true : false,\n        is_agent: values.salary_percent ? true : false,\n        is_basic: values.user_value === 1 ? true : false,\n        hour_price: values.salary_hour && values.hour_tax ? values.hour_tax : 0,\n        agent_rate: values.salary_percent ? 50 : 0\n      };\n      request(userListApi.updateUserList.action(params));\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className=\"create-container\">\n      <AdminMenu />\n      <h1>Создать пользователя</h1>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: false\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        className=\"create-user-form\"\n      >\n        <Form.Item\n          label=\"User Account\"\n          name=\"user_name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your username!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!'\n            }\n          ]}\n        >\n          <Input type=\"password\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Имя\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input username!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"user_sex\"\n          label=\"Пол\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input gender type!'\n            }\n          ]}\n        >\n          <Radio.Group>\n            <Radio value=\"male\">Male</Radio>\n            <Radio value=\"female\">Female</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          label=\"IDNP\"\n          name=\"user_idno\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input idno!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Телефон\"\n          name=\"user_phone\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input phone!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"user_value\"\n          label=\"Уровень\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input user value!'\n            }\n          ]}\n        >\n          <Radio.Group>\n            <Radio value={1}>Staff</Radio>\n            <Radio value={2}>Manager</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          label=\"На проценте\"\n          name=\"salary_percent\"\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n\n        <Form.Item label=\"На ставке\" name=\"salary_hour\" valuePropName=\"checked\">\n          <Switch />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Ставка час\"\n          name=\"hour_tax\"\n          rules={[\n            {\n              required: false\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item className=\"submit-button\">\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Созадть\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import { Canceler } from 'axios';\nimport { axios, cancelToken } from 'axios/axios';\n\nexport const workListApi = {\n  getWorkList: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.get(`/entities/works/${params ? `?search=${params}` : ``}`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (workListApi.getWorkList.cancel = c) // Get work list\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  createWorkItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.post(`/entities/works/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (workListApi.createWorkItem.cancel = c) // Create work item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  getWorkItem: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.get(`/entities/works/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (workListApi.getWorkItem.cancel = c) // Get work item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  updateWorkItem: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.put(`/entities/works/${params.id}/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (workListApi.updateWorkItem.cancel = c) // Update work item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  deleteWorkItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.delete(`/entities/works/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (workListApi.deleteWorkItem.cancel = c) // Delete work item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  }\n\n  // getWorkList: (params: {}) =>\n  //   axios.get(`${baseUrl}/entities/works/`, { params }), // Get work list\n\n  // createWorkItem: (params: {}) =>\n  //   axios.post(`${baseUrl}/entities/works/`, params), // Create work item\n\n  // getWorkItem: (params: {}) =>\n  //   axios.get(`${baseUrl}/entities/works/${params}/`), // Get work item\n\n  // updateWorkItem: (params: {}) =>\n  //   axios.put(`${baseUrl}/entities/works/${params}/`), // Update work item\n\n  // deleteWorkItem: (params: {}) =>\n  //   axios.delete(`${baseUrl}/entities/works/${params}/`) // Delete work item\n};\n","import { Canceler } from 'axios';\nimport { axios, cancelToken } from 'axios/axios';\n\nexport const materialListApi = {\n  getMaterialList: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.get(`/entities/items/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (materialListApi.getMaterialList.cancel = c) // Get material list\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  createMaterialItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.post(`/entities/items/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (materialListApi.createMaterialItem.cancel = c) // Create material item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  getMaterialItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.get(`/entities/items/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (materialListApi.getMaterialItem.cancel = c) // Get material item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  updateMaterialItem: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.put(`/entities/items/${params.id}/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (materialListApi.updateMaterialItem.cancel = c) // Update material item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  deleteMaterialItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.delete(`/entities/items/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (materialListApi.deleteMaterialItem.cancel = c) //  Delete material item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  }\n};\n","import * as React from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  InputNumber,\n  Select,\n  Tag,\n  Space,\n  Radio\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useRequest } from 'estafette';\nimport DatePicker from 'react-datepicker';\nimport { objectApi } from 'api/objectApi/objectApi';\nimport { userListApi } from 'api/userListApi/userListApi';\nimport { workListApi } from 'api/workListApi/workListApi';\nimport { materialListApi } from 'api/materialListApi/materialListApi';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './CreateObject.scss';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const workerRender = (props: any) => {\n  const { label, closable, onClose } = props;\n\n  return (\n    <Tag\n      color={'cyan'}\n      closable={closable}\n      onClose={onClose}\n      style={{ marginRight: 3, marginTop: 3 }}\n    >\n      {label}\n    </Tag>\n  );\n};\n\nexport const validateMessages = {\n  required: '${label} обязательно!'\n};\n\nexport const layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nexport const CreateObject = () => {\n  const { request, loading } = useRequest();\n  const { request: requestProfile, data: dataProfile } = useRequest<any>();\n  const { request: requestWorkList, data: dataWorkList } = useRequest<any>();\n  const { request: requestMaterialList, data: dataMaterialList } = useRequest<\n    any\n  >();\n  const { request: requestUsersList, data: dataUsersList } = useRequest<any>();\n  const dateFormat = require('dateformat');\n\n  const [value, setValue] = React.useState(0);\n  const [hold, setHold] = React.useState(false);\n  const [workList, setWorkList] = React.useState<any>([]);\n  const [materialList, setMaterialList] = React.useState<any>([]);\n  const [usersList, setUsersList] = React.useState<any>([]);\n  const [startDate, setStartDate] = React.useState<any>(new Date());\n\n  React.useEffect(() => {\n    fetch();\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      dataWorkList.results &&\n      dataMaterialList.results &&\n      dataUsersList.results\n    ) {\n      setWorkList(\n        dataWorkList.results.map((item: any) => ({\n          value: item.id,\n          label: item.title\n        }))\n      );\n      setMaterialList(\n        dataMaterialList.results.map((item: any) => ({\n          value: item.id,\n          label: item.title\n        }))\n      );\n      setUsersList(\n        dataUsersList.results.map((item: any) => ({\n          value: item.id,\n          label: item.fullname\n        }))\n      );\n    }\n  }, [dataWorkList, dataMaterialList, dataUsersList]);\n\n  const fetch = () => {\n    requestProfile(userListApi.getUserProfile.action({}));\n    requestWorkList(workListApi.getWorkList.action(''));\n    requestMaterialList(materialListApi.getMaterialList.action({}));\n    requestUsersList(userListApi.getUserList.action(''));\n  };\n\n  const onChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form:', values);\n\n    const keys = values.object.executors.map((item: any) => ({ user: item }));\n    const endDate = dateFormat(startDate, 'yyyy-mm-dd hh:mm:ss');\n\n    const params = {\n      date_ending: endDate,\n      exercises: values.object.exercises,\n      executors: keys,\n      materials: values.object.materials,\n      title: values.object.title,\n      state: !hold ? 'OPEN' : 'HOLD',\n      prepaid: values.object.prepaid,\n      discount: values.object.discount,\n      owner: dataProfile.id\n    };\n\n    request(objectApi.createObject.action(params));\n  };\n\n  console.log(dateFormat(startDate, 'yyyy-mm-dd hh:mm:ss'));\n\n  const onHoldingObject = () => {\n    setHold((prev) => !prev);\n  };\n\n  return (\n    <div className=\"create-object-container\">\n      <AdminMenu />\n      <h1>Создать рабочий обьект</h1>\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        validateMessages={validateMessages}\n        autoComplete=\"off\"\n        className=\"object-form\"\n      >\n        <Form.Item\n          name={['object', 'title']}\n          label=\"Название объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input placeholder=\"Введите название объекта\" />\n        </Form.Item>\n\n        <Form.Item\n          name={['object', 'object_date_end']}\n          label=\"Дата конца работы\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            className=\"data-picker\"\n          />\n        </Form.Item>\n\n        <Form.Item\n          name={['object', 'executors']}\n          key={'count'}\n          label=\"Список работников\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Select\n            placeholder={'Выберите работников'}\n            mode=\"multiple\"\n            showArrow\n            tagRender={workerRender}\n            style={{ width: '100%' }}\n            options={usersList}\n          />\n        </Form.Item>\n\n        <div className=\"add-inputs\">\n          <Form.List name={['object', 'exercises']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'work']}\n                      fieldKey={[field.fieldKey, 'work']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название работы обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workList}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'count']}\n                      fieldKey={[field.fieldKey, 'count']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить работу\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.List name={['object', 'materials']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'item']}\n                      fieldKey={[field.fieldKey, 'item']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название работы обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={materialList}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'count']}\n                      fieldKey={[field.fieldKey, 'count']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить материалов\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n        </div>\n\n        <Form.Item\n          className=\"avans_field\"\n          name={['object', 'prepaid']}\n          label=\"Аванс\"\n          rules={[\n            {\n              type: 'number',\n              required: true,\n              min: 0,\n              max: 9999999\n            }\n          ]}\n        >\n          <InputNumber placeholder=\"Введите аванс\" />\n        </Form.Item>\n        <Form.Item\n          className=\"radio-percent\"\n          name={['object', 'discount']}\n          label=\"Скидка\"\n        >\n          <Radio.Group onChange={onChange} value={value}>\n            <Radio value={0}>0%</Radio>\n            <Radio value={5}>5%</Radio>\n            <Radio value={10}>10%</Radio>\n            <Radio value={15}>15%</Radio>\n            <Radio value={20}>20%</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item>\n          <div className=\"submit-buttons\">\n            <Button\n              loading={loading}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"object-submit-btn\"\n            >\n              Создать\n            </Button>\n            <Button onClick={onHoldingObject} danger={hold}>\n              {hold ? 'Объект в ожидании' : 'Добавить в ожидание'}\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  InputNumber,\n  Select,\n  Tag,\n  Space,\n  Radio\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useParams } from 'estafette-router';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nimport './EditObject.scss';\n\ninterface ObjectForm {\n  object: {\n    object_master: string;\n    object_description: string;\n    object_name: string;\n    object_avans: number;\n    object_worker_list: string[];\n    object_work_list: {\n      work: string;\n      quantity: number;\n    };\n    object_material_list: {\n      material: string;\n      quantity: number;\n    };\n  };\n}\n\nexport const EditObject = () => {\n  const { objectId } = useParams<any>();\n  const [test, setTest] = React.useState<ObjectForm>();\n  const [value, setValue] = React.useState(0);\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n\n  const validateMessages = {\n    required: '${label} обязательно!'\n  };\n\n  const onFinish = (values: ObjectForm) => {\n    console.log('Received values of form:', values);\n    setTest(values);\n  };\n\n  console.log(test);\n\n  const workerListOptions = [\n    { value: 'Ваня' },\n    { value: 'Петя' },\n    { value: 'Саша' },\n    { value: 'Дима' }\n  ];\n\n  const workerPriceListOptions = [\n    { value: 'Установка розетки 1' },\n    { value: 'Установка розетки 2' },\n    { value: 'Установка розетки 3' },\n    { value: 'Установка розетки 4' }\n  ];\n\n  const workerRender = (props: any) => {\n    const { label, closable, onClose } = props;\n\n    return (\n      <Tag\n        color={'cyan'}\n        closable={closable}\n        onClose={onClose}\n        style={{ marginRight: 3, marginTop: 3 }}\n      >\n        {label}\n      </Tag>\n    );\n  };\n\n  const onChange = (event: RadioChangeEvent) => {\n    console.log('radio checked', event.target.value);\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"edit-object-container\">\n      <AdminMenu />\n      <h1>Редактировать рабочий обьект</h1>\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        validateMessages={validateMessages}\n        autoComplete=\"off\"\n        className=\"object-form\"\n      >\n        <Form.Item\n          name={['object', 'object_name']}\n          label=\"Название объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input placeholder=\"Введите название объекта\" />\n        </Form.Item>\n        <Form.Item\n          name={['object', 'object_description']}\n          label=\"Описание объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input.TextArea placeholder=\"Введите описание объекта\" />\n        </Form.Item>\n\n        <Form.Item\n          name={['object', 'object_worker_list']}\n          label=\"Список работников\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Select\n            placeholder={'Выберите работников'}\n            mode=\"multiple\"\n            showArrow\n            tagRender={workerRender}\n            style={{ width: '100%' }}\n            options={workerListOptions}\n          />\n        </Form.Item>\n\n        <div className=\"add-inputs\">\n          <Form.List name={['object', 'object_work_list']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'work']}\n                      fieldKey={[field.fieldKey, 'work']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название работы обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workerPriceListOptions}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'quantity']}\n                      fieldKey={[field.fieldKey, 'quantity']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить работу\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.List name={['object', 'object_material_list']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'material']}\n                      fieldKey={[field.fieldKey, 'material']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название материалов обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workerPriceListOptions}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'quantity']}\n                      fieldKey={[field.fieldKey, 'quantity']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить материалы\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n        </div>\n\n        <Form.Item\n          name={['object', 'object_avans']}\n          label=\"Аванс\"\n          rules={[\n            {\n              type: 'number',\n              required: true,\n              min: 0,\n              max: 9999999\n            }\n          ]}\n        >\n          <InputNumber placeholder=\"Введите аванс\" />\n        </Form.Item>\n\n        <Form.Item name={['object', 'object_discount']} label=\"Скидка\">\n          <Radio.Group onChange={onChange} value={value} name=\"salary_percent\">\n            <Radio value={0}>0%</Radio>\n            <Radio value={5}>5%</Radio>\n            <Radio value={10}>10%</Radio>\n            <Radio value={15}>15%</Radio>\n            <Radio value={20}>20%</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item>\n          <div className=\"submit-buttons\">\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"object-submit-btn\"\n            >\n              Сохранить\n            </Button>\n\n            <Button>Очистить форму</Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import { Canceler } from 'axios';\nimport { axios, cancelToken } from 'axios/axios';\n\nexport const instrumentListApi = {\n  getInstrumentList: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.get(`/entities/utils/${params ? `?search=${params}` : ``}`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (instrumentListApi.getInstrumentList.cancel = c) // Get Instrument list\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  createInstrumentItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.post(`/entities/utils/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (instrumentListApi.createInstrumentItem.cancel = c) // Create Instrument item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  getInstrumentItem: {\n    action: (params: {}): Promise<{ data: any }> =>\n      axios.get(`/entities/utils/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (instrumentListApi.getInstrumentItem.cancel = c) // Get Instrument item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  updateInstrumentItem: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.put(`/entities/utils/${params.id}/`, params, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (instrumentListApi.updateInstrumentItem.cancel = c) // Update Instrument item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  },\n  deleteInstrumentItem: {\n    action: (params: any): Promise<{ data: any }> =>\n      axios.delete(`/entities/utils/${params}/`, {\n        cancelToken: new cancelToken(\n          (c: Canceler) => (instrumentListApi.deleteInstrumentItem.cancel = c) // Delete Instrument item\n        )\n      }),\n    cancel: (() => null) as Canceler\n  }\n};\n","import * as React from 'react';\nimport { Modal, Input } from 'antd';\nimport { useRequest } from 'estafette';\nimport { instrumentListApi } from 'api/instrumentListApi/instrumentListApi';\n\nimport '../InventoryAddModal/InventoryAddModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id?: number | null;\n}\n\nexport const InventoryAddModal: React.FC<Modal> = ({\n  onShow,\n  onRefresh,\n  id\n}) => {\n  const { request, loading, errors } = useRequest();\n  const { request: requestInventoryItem, data: dataInventoryItem } = useRequest<\n    any\n  >();\n  const { request: requestEdit, loading: loadingEdit } = useRequest();\n  const [title, setTitle] = React.useState<string>('');\n  const [price, setPrice] = React.useState<string>('');\n  const [count, setCount] = React.useState<string>('');\n\n  React.useEffect(() => {\n    if (id) {\n      requestInventoryItem(instrumentListApi.getInstrumentItem.action(id));\n    }\n  }, [id]);\n\n  React.useEffect(() => {\n    if (dataInventoryItem) {\n      setTitle(dataInventoryItem.title);\n      setPrice(dataInventoryItem.price);\n      setCount(dataInventoryItem.count);\n    }\n  }, [dataInventoryItem]);\n\n  const onEdit = async () => {\n    const params = {\n      title,\n      price: parseFloat(price),\n      count: parseFloat(count),\n      id\n    };\n\n    try {\n      await requestEdit(instrumentListApi.updateInstrumentItem.action(params));\n      onShow();\n      onRefresh();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onFetch = async () => {\n    const params = {\n      title,\n      price: parseFloat(price),\n      count: parseFloat(count)\n    };\n\n    try {\n      await request(instrumentListApi.createInstrumentItem.action(params));\n      onShow();\n      onRefresh();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOk = () => {\n    if (id) {\n      onEdit();\n    } else {\n      onFetch();\n    }\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={id ? 'Редактировать инвентарь' : 'Добавить инвентарь'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading || loadingEdit}\n        onCancel={handleCancel}\n      >\n        <div className=\"input-fields\">\n          <Input\n            placeholder=\"Название инвентаря\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          {errors.title && <p>{errors.title[0]}</p>}\n          <Input\n            placeholder=\"Ценна инвентаря\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          {errors.price && <p>{errors.price[0]}</p>}\n          <Input\n            placeholder=\"Колличество инвентаря\"\n            value={count}\n            onChange={(e) => setCount(e.target.value)}\n          />\n          {errors.count && <p>{errors.count[0]}</p>}\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Modal } from 'antd';\nimport { useRequest } from 'estafette';\nimport { instrumentListApi } from 'api/instrumentListApi/instrumentListApi';\n\nimport '../InventoryDeleteModal/InventoryDeleteModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id: number | null;\n  type?: string;\n}\n\nexport const InventoryDeleteModal: React.FC<Modal> = ({\n  onShow,\n  onRefresh,\n  id,\n  type\n}) => {\n  const { request, loading, errors } = useRequest();\n\n  const onDelete = async () => {\n    if (id) {\n      try {\n        await request(instrumentListApi.deleteInstrumentItem.action(id));\n        onShow();\n        onRefresh();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleOk = () => {\n    onDelete();\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={type ? type : 'Удалить'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading}\n        onCancel={handleCancel}\n      >\n        <div className=\"delete-modal-text\">\n          <span>Вы действительно хотите удалить?</span>\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Button, Input } from 'antd';\nimport { useRequest } from 'estafette';\nimport { instrumentListApi } from 'api/instrumentListApi/instrumentListApi';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { InventoryAddModal } from 'components/atoms/InventoryAddModal/InventoryAddModal';\nimport { InventoryDeleteModal } from 'components/atoms/InventoryDeleteModal/InventoryDeleteModal';\nimport { Loader } from 'components/atoms/Loader/Loader';\n\nimport './InventoryList.scss';\n\nexport const InventoryList = () => {\n  const { request, data, loading } = useRequest<any>({\n    data: {},\n    loading: true\n  });\n  const { Search } = Input;\n\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [deleteVisible, setDeleteVisible] = React.useState<boolean>(false);\n  const [inventoryList, setInventoryList] = React.useState<any>([]);\n  const [editId, setEditId] = React.useState<number | null>(null);\n  const [searchValue, setSearchValue] = React.useState<string>('');\n  const [check, setCheck] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    onFetch();\n    setCheck(true);\n  }, []);\n\n  React.useEffect(() => {\n    if (check) {\n      onFetch();\n    }\n  }, [searchValue]);\n\n  React.useEffect(() => {\n    if (data) {\n      setInventoryList(data.results);\n    }\n  }, [data]);\n\n  const onFetch = () => {\n    request(instrumentListApi.getInstrumentList.action(searchValue));\n    setEditId(null);\n  };\n\n  const onShowModal = () => {\n    setVisible((prev) => !prev);\n    setEditId(null);\n  };\n\n  const onDeleteModal = () => {\n    setDeleteVisible((prev) => !prev);\n    setEditId(null);\n  };\n\n  const onShowEditModal = (id: number) => {\n    setVisible((prev) => !prev);\n    setEditId(id);\n  };\n\n  const onShowDeleteModal = (id: number) => {\n    setDeleteVisible((prev) => !prev);\n    setEditId(id);\n  };\n\n  const onSearch = (value: string) => setSearchValue(value);\n\n  return (\n    <div className=\"inventory-list\">\n      <AdminMenu />\n      {visible && (\n        <InventoryAddModal\n          onShow={onShowModal}\n          onRefresh={onFetch}\n          id={editId}\n        />\n      )}\n      {deleteVisible && (\n        <InventoryDeleteModal\n          onShow={onDeleteModal}\n          onRefresh={onFetch}\n          id={editId}\n          type=\"Удалить инвентарь\"\n        />\n      )}\n\n      <div className=\"title\">\n        <div className=\"title__text\">Список инвентаря</div>\n\n        <div className=\"action-group\">\n          <Search\n            placeholder=\"Введите текст\"\n            allowClear\n            enterButton=\"Поиск\"\n            onSearch={onSearch}\n            className=\"search-input\"\n            loading={loading}\n          />\n\n          <Button className=\"add-button\" onClick={onShowModal}>\n            Добавить\n          </Button>\n        </div>\n      </div>\n      <div className=\"item_list\">\n        {loading ? (\n          <Loader />\n        ) : (\n          inventoryList &&\n          inventoryList.map((item: any) => (\n            <div className=\"inventory-item\" key={item.id}>\n              <div className=\"inventory-item__name\">{item.title}</div>\n              <div className=\"inventory-item__quantity\">\n                Колличество - {item.count}\n              </div>\n              <div className=\"inventory-item__price\">\n                Ценна 1шт. - {item.price} лей.\n              </div>\n              <div className=\"button-edit-inventory\">\n                <Button onClick={() => onShowEditModal(item.id)}>\n                  Редактировать\n                </Button>\n              </div>\n              <div className=\"button-delete-inventory\">\n                <Button onClick={() => onShowDeleteModal(item.id)}>\n                  Удалить\n                </Button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Form, Button, InputNumber, Select, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useRequest } from 'estafette';\nimport { useParams } from 'estafette-router';\nimport { userListApi } from 'api/userListApi/userListApi';\nimport { materialListApi } from 'api/materialListApi/materialListApi';\nimport { instrumentListApi } from 'api/instrumentListApi/instrumentListApi';\nimport { werehouseApi } from 'api/werehouseApi/werehouseApi';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './ProfileAddMat.scss';\n\nexport const ProfileAddMat = () => {\n  const { userId } = useParams<any>();\n  const { request, data, loading } = useRequest<any>({ data: {} });\n  const { request: requestInventory, data: dataInventory } = useRequest<any>();\n  const { request: requestMaterial, data: dataMaterial } = useRequest<any>();\n\n  React.useEffect(() => {\n    if (userId) {\n      requestInventory(instrumentListApi.getInstrumentList.action({}));\n      requestMaterial(materialListApi.getMaterialList.action({}));\n      onFetch();\n    }\n  }, [userId]);\n\n  console.log(dataInventory.results, 'inventoryList');\n  console.log(dataMaterial.results, 'materialList');\n\n  const onFetch = () => {\n    request(userListApi.getUserById.action(userId));\n  };\n\n  const onFinish = (values: any) => {\n    console.log(values, 'values');\n  };\n\n  const materialList = React.useMemo(\n    () =>\n      dataMaterial.results\n        ? dataMaterial.results.map((item: { title: any; id: any }) => ({\n            value: item.id,\n            label: item.title\n          }))\n        : [],\n    [dataMaterial.results]\n  );\n\n  const inventoryList = React.useMemo(\n    () =>\n      dataInventory.results\n        ? dataInventory.results.map((item: { title: any; id: any }) => ({\n            value: item.id,\n            label: item.title\n          }))\n        : [],\n    [dataInventory.results]\n  );\n\n  return (\n    <div className=\"add-mat-container\">\n      <AdminMenu />\n      {data && (\n        <div className=\"user-info\">\n          <h1>Профиль работника</h1>\n          <ul>\n            <li>User name: {data.fullname}</li>\n            <li>IDNP: {data.idnp}</li>\n            <li>Phone: {data.phone}</li>\n          </ul>\n        </div>\n      )}\n\n      <Form\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        className=\"add-form\"\n      >\n        <Form.List name={['user', 'user_profile_material']}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'material']}\n                    fieldKey={[field.fieldKey, 'material']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Название работы обязательно!'\n                      }\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Выберите\"\n                      showArrow\n                      className=\"profile-select\"\n                      options={materialList}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'count']}\n                    fieldKey={[field.fieldKey, 'count']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Количество не меньше 0',\n                        min: 0,\n                        max: 999,\n                        type: 'number'\n                      }\n                    ]}\n                  >\n                    <InputNumber placeholder=\"кол-во\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Добавить материалы\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n\n        <Form.List name={['user', 'user_profile_inventory']}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'inventory']}\n                    fieldKey={[field.fieldKey, 'inventory']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Название работы обязательно!'\n                      }\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Выберите\"\n                      showArrow\n                      className=\"profile-select\"\n                      options={inventoryList}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'quantity']}\n                    fieldKey={[field.fieldKey, 'quantity']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Количество не меньше 0',\n                        min: 0,\n                        max: 999,\n                        type: 'number'\n                      }\n                    ]}\n                  >\n                    <InputNumber placeholder=\"кол-во\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Добавить инвентаря\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"add-submit-btn\">\n            Добавить\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, InputNumber, Button } from 'antd';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './ProfileEditMat.scss';\n\nexport const ProfileEditMat = () => {\n  const materialList = [\n    { value: 'Провод' },\n    { value: 'Лампочка' },\n    { value: 'Шурупы' },\n    { value: 'Розетка' }\n  ];\n\n  const inventoryList = [\n    { value: 'Машина Dacia Logan' },\n    { value: 'Дрель' },\n    { value: 'Набор ключей' },\n    { value: 'Набор отверток' }\n  ];\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form:', values);\n  };\n\n  return (\n    <div className=\"profile-edit-material\">\n      <AdminMenu />\n      <div className=\"edit-material\">\n        <Form onFinish={onFinish}>\n          <h1>Список материалов</h1>\n          {materialList.map((item) => (\n            <Form.Item\n              className=\"material-container\"\n              key={item.value}\n              name={['materials', `${item.value}`]}\n            >\n              <div className=\"material-item\">\n                <span>{item.value}</span>\n                <InputNumber placeholder=\"кол-во\" />\n              </div>\n            </Form.Item>\n          ))}\n          <h1>Список инвентаря</h1>\n          {inventoryList.map((item) => (\n            <Form.Item\n              className=\"inventory-container\"\n              key={item.value}\n              name={['materials', `${item.value}`]}\n            >\n              <div className=\"inventory-item\">\n                <span>{item.value}</span>\n                <InputNumber placeholder=\"кол-во\" />\n              </div>\n            </Form.Item>\n          ))}\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"object-submit-btn\"\n            >\n              Сохранить\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Modal } from 'antd';\nimport { useRequest } from 'estafette';\nimport { userListApi } from 'api/userListApi/userListApi';\n\nimport '../UserDeleteModal/UserDeleteModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id: number | null;\n  type?: string;\n}\n\nexport const UserDeleteModal: React.FC<Modal> = ({\n  onShow,\n  onRefresh,\n  id,\n  type\n}) => {\n  const { request, loading, errors } = useRequest();\n\n  const onDelete = async () => {\n    if (id) {\n      try {\n        await request(userListApi.deleteUserById.action(id));\n        onShow();\n        onRefresh();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleOk = () => {\n    onDelete();\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={type ? type : 'Удалить'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading}\n        onCancel={handleCancel}\n      >\n        <div className=\"delete-modal-text\">\n          <span>Вы действительно хотите удалить?</span>\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'estafette-router';\nimport { Button, Input } from 'antd';\nimport { useRequest } from 'estafette';\nimport { userListApi } from 'api/userListApi/userListApi';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { Loader } from 'components/atoms/Loader/Loader';\nimport { UserDeleteModal } from 'components/atoms/UserDeleteModal/UserDeleteModal';\n\nimport './UserList.scss';\n\nexport const UserList = () => {\n  const { request, data: dataUserList, loading, errors } = useRequest<any>({\n    data: {}\n  });\n  const { Search } = Input;\n  const { push } = useHistory();\n\n  const [userList, setUserList] = useState<any>([]);\n  const [deleteVisible, setDeleteVisible] = useState<boolean>(false);\n  const [deleteId, setDeleteId] = useState<number | null>(null);\n  const [searchValue, setSearchValue] = React.useState<string>('');\n  const [check, setCheck] = React.useState<boolean>(false);\n\n  useEffect(() => {\n    onFetch();\n    setCheck(true);\n  }, []);\n\n  useEffect(() => {\n    if (check) {\n      onFetch();\n    }\n  }, [searchValue]);\n\n  useEffect(() => {\n    if (dataUserList) {\n      setUserList(dataUserList.results);\n    }\n  }, [dataUserList]);\n\n  const onFetch = () => {\n    request(userListApi.getUserList.action(searchValue));\n  };\n\n  const onDeleteUser = () => {\n    setDeleteVisible((prev) => !prev);\n    setDeleteId(null);\n  };\n\n  const onShowDeleteModal = (id: number) => {\n    setDeleteVisible((prev) => !prev);\n    setDeleteId(id);\n  };\n\n  const onSearch = (value: string) => setSearchValue(value);\n\n  return (\n    <div className=\"user-list\">\n      <AdminMenu />\n      {deleteVisible && (\n        <UserDeleteModal\n          onShow={onDeleteUser}\n          onRefresh={onFetch}\n          id={deleteId}\n          type=\"Удалить пользователя\"\n        />\n      )}\n      <div className=\"title\">\n        <div className=\"title__text\">Список персонала</div>\n\n        <Search\n          placeholder=\"Введите текст\"\n          allowClear\n          enterButton=\"Поиск\"\n          onSearch={onSearch}\n          className=\"search-input\"\n          loading={loading}\n        />\n      </div>\n      <div className=\"item_list\">\n        {loading ? (\n          <Loader />\n        ) : (\n          userList &&\n          userList.map((item: any) => (\n            <div className=\"user-item-content\" key={item.id}>\n              <div className=\"user-item\">\n                <div className=\"user-item__name\">\n                  {item.fullname}\n                  <br />\n                  {item.gender.toLowerCase()}\n                </div>\n                <div className=\"user-item__quantity\">Телефон: {item.phone}</div>\n                <div className=\"user-item__price\">\n                  Мат. на сумму : 14550 лей.\n                </div>\n                <div className=\"button-edit-user\">\n                  <Button\n                    onClick={() =>\n                      push('ProfileAddMatPage', { userId: item.id })\n                    }\n                  >\n                    Добавить Мат.\n                  </Button>\n                </div>\n                <div className=\"button-edit-user\">\n                  <Button onClick={() => push('ProfileEditMatPage')}>\n                    Редактировать Мат.\n                  </Button>\n                </div>\n                <div className=\"button-edit-user\">\n                  <Button onClick={() => onShowDeleteModal(item.id)}>\n                    <span>Удалить Работника</span>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useRequest } from 'estafette';\nimport { userListApi } from 'api/userListApi/userListApi';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './UserProfile.scss';\n\nexport const UserProfile = () => {\n  const { request, data: userData, loading } = useRequest<any>({\n    data: {}\n  });\n\n  React.useEffect(() => {\n    fetch();\n  }, []);\n\n  console.log(userData);\n\n  const fetch = () => {\n    request(userListApi.getUserProfile.action({}));\n  };\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n  };\n\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!'\n    }\n  };\n\n  const onFinish = (values: any) => {\n    console.log(values);\n  };\n\n  return (\n    <div className=\"user-profile\">\n      <AdminMenu />\n      <h1>Профиль работника</h1>\n      <div className=\"user-profile-content\">\n        <div className=\"user-detail-form\">\n          <Form\n            {...layout}\n            name=\"nest-messages\"\n            onFinish={onFinish}\n            validateMessages={validateMessages}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              name={['user', 'name']}\n              label=\"Name\"\n              rules={[{ required: true }]}\n            >\n              <Input placeholder={userData.username} disabled />\n            </Form.Item>\n            <Form.Item\n              name={['user', 'idnp']}\n              label=\"IDNP\"\n              rules={[{ type: 'email' }]}\n            >\n              <Input placeholder={userData.idnp} />\n            </Form.Item>\n            <Form.Item name={['user', 'phone']} label=\"Phone\">\n              <Input placeholder={userData.phone} />\n            </Form.Item>\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Сохранить\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n\n        <div className=\"inventory-mat-review\">\n          <div className=\"material-review\">\n            <span>Список материалов</span>\n            <ul className=\"material-list\">\n              <li>Провод 100м х 3шт.</li>\n              <li>Лампочка 100В х 10шт.</li>\n              <li>Розетка х 10шт.</li>\n              <li>Лампочка LED х 10шт.</li>\n              <li>Провод 23с х 20шт.</li>\n            </ul>\n          </div>\n          <div className=\"inventory-review\">\n            <span>Список инвентаря</span>\n            <ul className=\"inventory-list\">\n              <li>Машина Dacia Logan x 1шт.</li>\n              <li>Дрель x 1шт.</li>\n              <li>Набор ключей х 1шт.</li>\n              <li>Набор отверток х 1шт.</li>\n              <li>Ключ разводной х 1шт.</li>\n            </ul>\n          </div>\n          <div className=\"object-review\">\n            <span>Список обьектов</span>\n            <ul className=\"object-list\">\n              <li>Ларёк - 24 час / 17лей = 600 лей</li>\n              <li>Дом - 12 час / 17лей = 300 лей</li>\n              <li>Кухня - 20 час / 17лей = 400 лей</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'estafette-router';\nimport { Button } from 'antd';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\n\nimport './WaitingObjectList.scss';\n\nexport const WaitingObjectList = () => {\n  const { push } = useHistory();\n\n  const objectList = [\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    }\n  ];\n\n  return (\n    <div className=\"waiting-object-list\">\n      <AdminMenu />\n      <div className=\"waiting-object-list__title\">\n        Список ожидаемых обьектов\n      </div>\n      <div className=\"waiting-object-list__items\">\n        {objectList.map((item, index) => (\n          <div className=\"waiting-object_item\" key={index}>\n            <div className=\"waiting-object_item__title\">\n              <span>Название: {item.object_name}</span>\n              <div className=\"buttons-group\">\n                <Button className=\"close-object\">Добавить</Button>\n\n                <Button\n                  className=\"close-object\"\n                  onClick={() => push('EditObjectPage')}\n                >\n                  Редактировать\n                </Button>\n\n                <Button className=\"close-object\">Удалить</Button>\n              </div>\n            </div>\n            <div className=\"waiting-object_item__description\">\n              <span>Описание объекта</span>\n              <br />\n              {item.object_description}\n            </div>\n            <div className=\"waiting-object_item__workers\">\n              <div className=\"workers-list\">\n                <span>Список работников</span>\n                <ul>\n                  {item.object_workers.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <div className=\"waiting-object_work-detail\">\n              <span>Описание работ</span>\n              <div className=\"waiting-object_work-detail__description\">\n                {item.object_work_description}\n              </div>\n\n              <span>Описание материалов</span>\n              <div className=\"waiting-object_work-detail__description\">\n                {item.object_work_description}\n              </div>\n              {/* <div className=\"object_work-detail__price\">\n                            Примерно {item.object_work_detail_price} лей.\n                        </div> */}\n            </div>\n            <div className=\"waiting-object_avans\">\n              Аванс {item.object_work_avans} лей.\n            </div>\n            <div className=\"waiting-object_price\">\n              Стоимость обьекта {item.object_work_price} лей.\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Input, Modal } from 'antd';\nimport { useRequest } from 'estafette';\nimport { materialListApi } from 'api/materialListApi/materialListApi';\n\nimport '../WerehouseAddModal/WerehouseAddModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id?: number | null;\n}\n\nexport const WerehouseAddModal: React.FC<Modal> = ({\n  onShow,\n  onRefresh,\n  id\n}) => {\n  const { request, loading, errors } = useRequest();\n  const { request: requestInventoryItem, data: dataInventoryItem } = useRequest<\n    any\n  >();\n  const { request: requestEdit, loading: loadingEdit } = useRequest();\n  const [title, setTitle] = React.useState<string>('');\n  const [price, setPrice] = React.useState<string>('');\n  const [sellPrice, setSellPrice] = React.useState<string>('');\n  const [count, setCount] = React.useState<string>('');\n\n  React.useEffect(() => {\n    if (id) {\n      requestInventoryItem(materialListApi.getMaterialItem.action(id));\n    }\n  }, [id]);\n\n  React.useEffect(() => {\n    if (dataInventoryItem) {\n      setTitle(dataInventoryItem.title);\n      setPrice(dataInventoryItem.price);\n      setCount(dataInventoryItem.count);\n    }\n  }, [dataInventoryItem]);\n\n  const onEdit = async () => {\n    const params = {\n      title,\n      price: parseFloat(price),\n      count: parseFloat(count),\n      id\n    };\n\n    try {\n      await requestEdit(materialListApi.updateMaterialItem.action(params));\n      onShow();\n      onRefresh();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onFetch = async () => {\n    const params = {\n      title,\n      price: parseFloat(price),\n      count: parseFloat(count)\n    };\n\n    try {\n      await request(materialListApi.createMaterialItem.action(params));\n      onShow();\n      onRefresh();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOk = () => {\n    if (id) {\n      onEdit();\n    } else {\n      onFetch();\n    }\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={id ? 'Редактировать материал' : 'Добавить материал'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading || loadingEdit}\n        onCancel={handleCancel}\n      >\n        <div className=\"input-fields\">\n          <Input\n            placeholder=\"Название материала\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          {errors.title && <p>{errors.title[0]}</p>}\n          <Input\n            placeholder=\"Ценна покупки материала\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          {errors.price && <p>{errors.price[0]}</p>}\n          <Input\n            placeholder=\"Ценна продажи материала\"\n            value={sellPrice}\n            onChange={(e) => setSellPrice(e.target.value)}\n          />\n          {errors.price && <p>{errors.price[0]}</p>}\n          <Input\n            placeholder=\"Колличество материала\"\n            value={count}\n            onChange={(e) => setCount(e.target.value)}\n          />\n          {errors.count && <p>{errors.count[0]}</p>}\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Modal } from 'antd';\nimport { useRequest } from 'estafette';\nimport { materialListApi } from 'api/materialListApi/materialListApi';\n\nimport '../WerehouseDeleteModal/WerehouseDeleteModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id: number | null;\n  type?: string;\n}\n\nexport const WerehouseDeleteModal: React.FC<Modal> = ({\n  onShow,\n  onRefresh,\n  id,\n  type\n}) => {\n  const { request, loading, errors } = useRequest();\n\n  const onDelete = async () => {\n    if (id) {\n      try {\n        await request(materialListApi.deleteMaterialItem.action(id));\n        onShow();\n        onRefresh();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleOk = () => {\n    onDelete();\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={type ? type : 'Удалить'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading}\n        onCancel={handleCancel}\n      >\n        <div className=\"delete-modal-text\">\n          <span>Вы действительно хотите удалить?</span>\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Button } from 'antd';\nimport { useRequest } from 'estafette';\nimport { materialListApi } from 'api/materialListApi/materialListApi';\nimport { Loader } from 'components/atoms/Loader/Loader';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { WerehouseAddModal } from 'components/atoms/WerehouseAddModal/WerehouseAddModal';\nimport { WerehouseDeleteModal } from 'components/atoms/WerehouseDeleteModal/WerehouseDeleteModal';\n\nimport './WerehouseList.scss';\n\nexport const WerehouseList = () => {\n  const { request, data, loading } = useRequest<any>({\n    data: {},\n    loading: true\n  });\n\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [deleteVisible, setDeleteVisible] = React.useState<boolean>(false);\n  const [werehouseList, setWerehouseList] = React.useState<any>([]);\n  const [materialId, setMaterialId] = React.useState<any>(null);\n\n  React.useEffect(() => {\n    onFetch();\n  }, []);\n\n  React.useEffect(() => {\n    if (data) {\n      setWerehouseList(data.results);\n    }\n  }, [data]);\n\n  console.log(werehouseList);\n\n  const onFetch = () => {\n    request(materialListApi.getMaterialList.action({}));\n  };\n\n  const onShowModal = () => {\n    setVisible((prev) => !prev);\n    setMaterialId(null);\n  };\n\n  const onShowEditModal = (mat_id: number) => {\n    setVisible((prev) => !prev);\n    setMaterialId(mat_id);\n  };\n\n  const onDeleteModal = () => {\n    setDeleteVisible((prev) => !prev);\n    setMaterialId(null);\n  };\n\n  const onShowDeleteModal = (mat_id: number) => {\n    setDeleteVisible((prev) => !prev);\n    setMaterialId(mat_id);\n  };\n\n  return (\n    <div className=\"werehouse-list\">\n      <AdminMenu />\n      {visible && (\n        <WerehouseAddModal\n          onShow={onShowModal}\n          onRefresh={onFetch}\n          id={materialId}\n        />\n      )}\n      {deleteVisible && (\n        <WerehouseDeleteModal\n          onShow={onDeleteModal}\n          onRefresh={onFetch}\n          id={materialId}\n          type=\"Удалить материал\"\n        />\n      )}\n      <div className=\"werehouse-list__title\">\n        <span>Список материалов</span>\n        <Button className=\"add-material\" onClick={onShowModal}>\n          Добавить\n        </Button>\n      </div>\n      <div className=\"werehouse-list__items\">\n        {loading ? (\n          <Loader />\n        ) : (\n          werehouseList &&\n          werehouseList.map((item: any) => (\n            <div className=\"werehouse-item\" key={item.id}>\n              <div className=\"werehouse-item__name\">{item.title}</div>\n              <div className=\"werehouse-item__buy-price\">\n                Ценна покупки - {item.price} лей.\n              </div>\n              <div className=\"werehouse-item__sell-price\">\n                Ценна продажи - {item.price} лей.\n              </div>\n              <div className=\"werehouse-item__quantity\">\n                Колличество - {item.count} шт.\n              </div>\n              <div className=\"button-edit-werehouse\">\n                <Button onClick={() => onShowEditModal(item.id)}>\n                  Редактировать\n                </Button>\n              </div>\n              <div className=\"button-delete-werehouse\">\n                <Button onClick={() => onShowDeleteModal(item.id)}>\n                  Удалить\n                </Button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Modal, Input } from 'antd';\nimport { useRequest } from 'estafette';\nimport { workListApi } from 'api/workListApi/workListApi';\n\nimport '../WorkAddModal/WorkAddModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id?: number | null;\n}\n\nexport const WorkAddModal: React.FC<Modal> = ({ onShow, onRefresh, id }) => {\n  const { request, loading, errors } = useRequest();\n  const { request: requestInventoryItem, data: dataInventoryItem } = useRequest<\n    any\n  >();\n  const { request: requestEdit, loading: loadingEdit } = useRequest();\n  const [title, setTitle] = React.useState<string>('');\n  const [price, setPrice] = React.useState<string>('');\n\n  React.useEffect(() => {\n    if (id) {\n      requestInventoryItem(workListApi.getWorkItem.action(id));\n    }\n  }, [id]);\n\n  React.useEffect(() => {\n    if (dataInventoryItem) {\n      setTitle(dataInventoryItem.title);\n      setPrice(dataInventoryItem.price);\n    }\n  }, [dataInventoryItem]);\n\n  const onEdit = async () => {\n    const params = {\n      title,\n      price: parseFloat(price),\n      id\n    };\n\n    try {\n      await requestEdit(workListApi.updateWorkItem.action(params));\n      onShow();\n      onRefresh();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onFetch = async () => {\n    const params = {\n      title,\n      price: parseFloat(price)\n    };\n\n    try {\n      await request(workListApi.createWorkItem.action(params));\n      onShow();\n      onRefresh();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOk = () => {\n    if (id) {\n      onEdit();\n    } else {\n      onFetch();\n    }\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={id ? 'Редактировать работу' : 'Добавить работу'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading || loadingEdit}\n        onCancel={handleCancel}\n      >\n        <div className=\"input-fields\">\n          <Input\n            placeholder=\"Название работы\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          {errors.title && <p>{errors.title[0]}</p>}\n          <Input\n            placeholder=\"Ценна работы\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          {errors.price && <p>{errors.price[0]}</p>}\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Modal } from 'antd';\nimport { useRequest } from 'estafette';\nimport { workListApi } from 'api/workListApi/workListApi';\n\nimport '../WorkDeleteModal/WorkDeleteModal.scss';\n\ninterface Modal {\n  onShow: () => void;\n  onRefresh: () => void;\n  id: number | null;\n  type?: string;\n}\n\nexport const WorkDeleteModal: React.FC<Modal> = ({\n  onShow,\n  onRefresh,\n  id,\n  type\n}) => {\n  const { request, loading, errors } = useRequest();\n\n  const onDelete = async () => {\n    if (id) {\n      try {\n        await request(workListApi.deleteWorkItem.action(id));\n        onShow();\n        onRefresh();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleOk = () => {\n    onDelete();\n  };\n\n  const handleCancel = () => {\n    onShow();\n  };\n\n  return (\n    <>\n      <Modal\n        title={type ? type : 'Удалить'}\n        visible\n        onOk={handleOk}\n        confirmLoading={loading}\n        onCancel={handleCancel}\n      >\n        <div className=\"delete-modal-text\">\n          <span>Вы действительно хотите удалить?</span>\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Button, Input } from 'antd';\nimport { useRequest } from 'estafette';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { WorkAddModal } from 'components/atoms/WorkAddModal/WorkAddModal';\nimport { WorkDeleteModal } from 'components/atoms/WorkDeleteModal/WorkDeleteModal';\nimport { workListApi } from 'api/workListApi/workListApi';\nimport { Loader } from 'components/atoms/Loader/Loader';\n\nimport './WorkList.scss';\n\nexport const WorkList = () => {\n  const { request, data, loading } = useRequest<any>({ data: {} });\n  const { Search } = Input;\n\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [deleteVisible, setDeleteVisible] = React.useState<boolean>(false);\n  const [workId, setWorkId] = React.useState<number | null>(null);\n  const [dataWorkList, setDataWorkList] = React.useState<any>([]);\n  const [searchValue, setSearchValue] = React.useState<string>('');\n  const [check, setCheck] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    onFetch();\n    setCheck(true);\n  }, []);\n\n  React.useEffect(() => {\n    if (data) {\n      setDataWorkList(data.results);\n    }\n  }, [data]);\n\n  React.useEffect(() => {\n    if (check) {\n      onFetch();\n    }\n  }, [searchValue]);\n\n  const onFetch = () => {\n    request(workListApi.getWorkList.action(searchValue));\n  };\n\n  const onShowModal = () => {\n    setVisible((prev) => !prev);\n    setWorkId(null);\n  };\n\n  const onShowEditModal = (mat_id: number) => {\n    setVisible((prev) => !prev);\n    setWorkId(mat_id);\n  };\n\n  const onDeleteModal = () => {\n    setDeleteVisible((prev) => !prev);\n    setWorkId(null);\n  };\n\n  const onShowDeleteModal = (mat_id: number) => {\n    setDeleteVisible((prev) => !prev);\n    setWorkId(mat_id);\n  };\n\n  const onSearch = (value: string) => setSearchValue(value);\n\n  return (\n    <div className=\"work-list\">\n      <AdminMenu />\n\n      {visible && (\n        <WorkAddModal onShow={onShowModal} onRefresh={onFetch} id={workId} />\n      )}\n\n      {deleteVisible && (\n        <WorkDeleteModal\n          onShow={onDeleteModal}\n          onRefresh={onFetch}\n          id={workId}\n          type=\"Удалить работу\"\n        />\n      )}\n\n      <div className=\"title\">\n        <div className=\"title__text\">Список работ</div>\n\n        <div className=\"action-group\">\n          <Search\n            placeholder=\"Введите текст\"\n            allowClear\n            enterButton=\"Поиск\"\n            onSearch={onSearch}\n            className=\"search-input\"\n            loading={loading}\n          />\n\n          <Button className=\"add-button\" onClick={onShowModal}>\n            Добавить\n          </Button>\n        </div>\n      </div>\n      <div className=\"item_list\">\n        {loading ? (\n          <Loader />\n        ) : (\n          dataWorkList &&\n          dataWorkList.map((item: any) => (\n            <div className=\"work-item\" key={item.id}>\n              <div className=\"work-item__name\">{item.title}</div>\n              <div className=\"work-item__quantity\">Колличество - 1 шт.</div>\n              <div className=\"work-item__price\">Ценна - {item.price} лей.</div>\n              <div className=\"button-edit-work\">\n                <Button onClick={() => onShowEditModal(item.id)}>\n                  Редактировать\n                </Button>\n              </div>\n              <div className=\"button-delete-work\">\n                <Button onClick={() => onShowDeleteModal(item.id)}>\n                  Удалить\n                </Button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Button, Input } from 'antd';\nimport { useRequest } from 'estafette';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { userListApi } from 'api/userListApi/userListApi';\nimport { Loader } from 'components/atoms/Loader/Loader';\n\nimport './SalaryList.scss';\n\nexport const SalaryList = () => {\n  const { request, data: dataUserList, loading, errors } = useRequest<any>({\n    data: {},\n    loading: true\n  });\n  const { Search } = Input;\n\n  const [userList, setUserList] = React.useState<any>([]);\n  const [searchValue, setSearchValue] = React.useState<string>('');\n  const [check, setCheck] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    request(userListApi.getUserList.action(searchValue));\n    setCheck(true);\n  }, []);\n\n  React.useEffect(() => {\n    if (check) {\n      request(userListApi.getUserList.action(searchValue));\n    }\n  }, [searchValue]);\n\n  React.useEffect(() => {\n    if (dataUserList) {\n      setUserList(dataUserList.results);\n    }\n  }, [dataUserList]);\n\n  const onSearch = (value: string) => setSearchValue(value);\n\n  return (\n    <div className=\"salary-list\">\n      <AdminMenu />\n      <div className=\"title\">\n        <div className=\"title__info\">\n          <div className=\"title__text\">Список зарплат</div>\n          <div className=\"title__period\">Период 01.02.2021 - 01.03.2021</div>\n        </div>\n\n        <Search\n          placeholder=\"Введите текст\"\n          allowClear\n          enterButton=\"Поиск\"\n          onSearch={onSearch}\n          className=\"search-input\"\n          loading={loading}\n        />\n      </div>\n      <div className=\"item_list\">\n        {loading ? (\n          <Loader />\n        ) : (\n          userList &&\n          userList.map((item: any) => (\n            <div className=\"salary-item\" key={item.id}>\n              <div className=\"salary-item__name\">\n                {item.fullname}\n                <span>{item.gender}</span>\n                <span>Тел. {item.phone}</span>\n              </div>\n              <div className=\"salary-item__salary\">Зарплата - 0</div>\n              <div className=\"salary-item__avans\">Аванс - 0</div>\n              <div className=\"salary-item__result\">Остаток - 0</div>\n              <div className=\"button-avans\">\n                <Button>Аванс</Button>\n              </div>\n              <div className=\"button-salary\">\n                <Button>Выдал ЗП</Button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n      <div className=\"footer\">\n        <div className=\"title__total_number\">{userList?.length} человек</div>\n        <div className=\"title__total_salary\">\n          <span>Выдал 0 лей. / Осталось 0 лей.</span>\n          <span>Всего к отплате 0 лей.</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Routes } from 'estafette-router';\nimport { Login } from 'components/molecules/Login/Login';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { UserMenu } from 'components/organisms/UserMenu/UserMenu';\nimport { CurrentObject } from 'components/molecules/CurrentObject/CurrentObject';\nimport { AddWorkerTime } from 'components/molecules/AddWorkerTime/AddWorkerTime';\nimport { AdminCreateUser } from 'components/molecules/AdminCreateUser/AdminCreateUser';\nimport { CreateObject } from 'components/molecules/CreateObject/CreateObject';\nimport { EditObject } from 'components/molecules/EditObject/EditObject';\nimport { InventoryList } from 'components/molecules/InventoryList/InventoryList';\nimport { ObjectList } from 'components/molecules/ObjectList/ObjectList';\nimport { ProfileAddMat } from 'components/molecules/ProfileAddMat/ProfileAddMat';\nimport { ProfileEditMat } from 'components/molecules/ProfileEditMat/ProfileEditMat';\nimport { UserList } from 'components/molecules/UserList/UserList';\nimport { UserProfile } from 'components/molecules/UserProfile/UserProfile';\nimport { WaitingObjectList } from 'components/molecules/WaitingObjectList/WaitingObjectList';\nimport { WerehouseList } from 'components/molecules/WerehouseList/WerehouseList';\nimport { WorkList } from 'components/molecules/WorkList/WorkList';\nimport { SalaryList } from 'components/molecules/SalaryList/SalaryList';\n\nconst LoginPage = (): React.ReactNode => <Login />;\nconst AdminPage = (): React.ReactNode => <AdminMenu />;\nconst StaffPage = (): React.ReactNode => <UserMenu />;\nconst CurrentObjectPage = (): React.ReactNode => <CurrentObject />;\nconst EditObjectPage = (): React.ReactNode => <EditObject />;\nconst AddWorkerTimePage = (): React.ReactNode => <AddWorkerTime />;\nconst ProfileEditMatPage = (): React.ReactNode => <ProfileEditMat />;\nconst WaitingObjectListPage = (): React.ReactNode => <WaitingObjectList />;\nconst ProfileAddMatPage = (): React.ReactNode => <ProfileAddMat />;\nconst UserProfilePage = (): React.ReactNode => <UserProfile />;\nconst UserListPage = (): React.ReactNode => <UserList />;\nconst InventoryListPage = (): React.ReactNode => <InventoryList />;\nconst ObjectListPage = (): React.ReactNode => <ObjectList />;\nconst WerehouseListPage = (): React.ReactNode => <WerehouseList />;\nconst WorkListPage = (): React.ReactNode => <WorkList />;\nconst AdminCreateUserPage = (): React.ReactNode => <AdminCreateUser />;\nconst CreateObjectPage = (): React.ReactNode => <CreateObject />;\nconst SalaryListPage = (): React.ReactNode => <SalaryList />;\n\nexport const routes: Routes[] = [\n  { name: 'Login', path: '/', exact: true, component: LoginPage },\n  { name: 'AdminPage', path: '/admin-menu', exact: true, component: AdminPage },\n  { name: 'StaffPage', path: '/staff-menu', exact: true, component: StaffPage },\n  {\n    name: 'SalaryListPage',\n    path: '/admin-menu/salary-list',\n    exact: true,\n    component: SalaryListPage\n  },\n  {\n    name: 'CurrentObjectPage',\n    path: '/admin-menu/curent-object',\n    exact: true,\n    component: CurrentObjectPage\n  },\n  {\n    name: 'EditObjectPage',\n    path: '/admin-menu/edit-object/:objectId',\n    exact: true,\n    component: EditObjectPage\n  },\n  {\n    name: 'AddWorkerTimePage',\n    path: '/admin-menu/edit-object-worker-time/:objectId',\n    exact: true,\n    component: AddWorkerTimePage\n  },\n  {\n    name: 'ProfileEditMatPage',\n    path: '/admin-menu/user-profile-edit-material',\n    exact: true,\n    component: ProfileEditMatPage\n  },\n  {\n    name: 'WaitingObjectListPage',\n    path: '/admin-menu/object-waiting-list',\n    exact: true,\n    component: WaitingObjectListPage\n  },\n  {\n    name: 'ProfileAddMatPage',\n    path: '/admin-menu/user-profile-add-material/:userId',\n    exact: true,\n    component: ProfileAddMatPage\n  },\n  {\n    name: 'UserProfilePage',\n    path: '/admin-menu/user-profile',\n    exact: true,\n    component: UserProfilePage\n  },\n  {\n    name: 'UserListPage',\n    path: '/admin-menu/user-list',\n    exact: true,\n    component: UserListPage\n  },\n  {\n    name: 'InventoryListPage',\n    path: '/admin-menu/inventory-list',\n    exact: true,\n    component: InventoryListPage\n  },\n  {\n    name: 'ObjectListPage',\n    path: '/admin-menu/object-list',\n    exact: true,\n    component: ObjectListPage\n  },\n  {\n    name: 'WerehouseListPage',\n    path: '/admin-menu/werehouse-list',\n    exact: true,\n    component: WerehouseListPage\n  },\n  {\n    name: 'WorkListPage',\n    path: '/admin-menu/work-price-list',\n    exact: true,\n    component: WorkListPage\n  },\n  {\n    name: 'AdminCreateUserPage',\n    path: '/admin-menu/create-user',\n    exact: true,\n    component: AdminCreateUserPage\n  },\n  {\n    name: 'CreateObjectPage',\n    path: '/admin-menu/create-object',\n    exact: true,\n    component: CreateObjectPage\n  }\n];\n","import * as React from 'react';\nimport { Login } from 'components/molecules/Login/Login';\n\nimport './Main.scss';\n\nexport const Main = () => {\n  return <Login />;\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CreateRouter } from 'estafette-router';\nimport { routes } from 'router/routes';\nimport { Main } from 'components/templates/Main/Main';\nimport { ProviderContext } from 'context/Context';\n\nimport './index.scss';\n\nReactDOM.render(\n  <ProviderContext>\n    <CreateRouter routes={routes}>\n      <Main />\n    </CreateRouter>\n  </ProviderContext>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
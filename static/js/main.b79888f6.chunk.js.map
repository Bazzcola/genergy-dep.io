{"version":3,"sources":["components/context/Context.tsx","components/molecules/InventoryList/InventoryList.tsx","components/molecules/ObjectList/ObjectList.tsx","components/molecules/SalaryList/SalaryList.tsx","components/molecules/WerehouseList/WerehouseList.tsx","components/molecules/WorkList/WorkList.tsx","components/molecules/AdminCreateUser/AdminCreateUser.tsx","components/molecules/CreateObject/CreateObject.tsx","components/molecules/UserList/UserList.tsx","components/molecules/UserProfile/UserProfile.tsx","components/molecules/ProfileAddMat/ProfileAddMat.tsx","components/molecules/ProfileEditMat/ProfileEditMat.tsx","components/molecules/WaitingObjectList/WaitingObjectList.tsx","components/molecules/EditObject/EditObject.tsx","components/molecules/AddWorkerTime/AddWorkerTime.tsx","components/molecules/CurrentObject/CurrentObject.tsx","components/organisms/AdminMenu/AdminMenu.tsx","components/templates/Main/Main.tsx","index.tsx"],"names":["dataSalaryList","name","sex","phone","salary","avans","Context","React","createContext","salaryList","setSalaryList","ProviderContext","props","useState","children","useEffect","Provider","value","InventoryList","className","quantity","price","map","item","index","key","ObjectList","object_name","object_description","object_workers","object_work_description","work","object_work_material","title","object_work_detail_price","object_work_avans","object_work_price","to","activeClassName","SalaryList","allSalary","setAllSalary","allAvans","setAllAvans","reduce","total","x","y","length","WerehouseList","werehouse_name","werehouse_quantity","werehouse_buy_price","werehouse_sell_price","WorkList","AdminCreateUser","password","username","form","setForm","tailLayout","wrapperCol","offset","span","console","log","labelCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Item","label","rules","required","message","type","Group","valuePropName","Password","htmlType","CreateObject","setTest","setValue","workerPriceListOptions","workerRender","closable","onClose","color","style","marginRight","marginTop","validateMessages","autoComplete","placeholder","TextArea","mode","showArrow","tagRender","width","options","List","fields","add","remove","field","display","marginBottom","align","fieldKey","min","max","MinusCircleOutlined","onClick","block","icon","PlusOutlined","onChange","e","target","UserList","useContext","UserProfile","layout","types","email","disabled","ProfileAddMat","materialList","inventoryList","ProfileEditMat","WaitingObjectList","EditObject","test","event","AddWorkerTime","workerListOptions","CurrentObject","AdminMenu","showMenu","setShowMenu","mediaMenu","window","onclick","matches","handleMenuClick","info","menu1","menu2","src","alt","overlay","DownOutlined","prevState","theme","ref","PieChartOutlined","DesktopOutlined","ContainerOutlined","MailOutlined","AppstoreOutlined","path","exact","Main","login","userType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b79888f6.chunk.js","sourcesContent":["import React, { useEffect, useState, ReactNode } from 'react';\n\nexport interface Props {\n  salaryList: SalaryList[];\n  setSalaryList: React.Dispatch<React.SetStateAction<SalaryList[]>>;\n}\n\nexport interface SalaryList {\n  name: string;\n  sex: string;\n  phone: string;\n  salary: number;\n  avans: number;\n}\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nconst defaultValue = {\n  salaryList: [],\n  setSalaryList: () => {}\n};\n\nconst dataSalaryList = [\n  {\n    name: 'Петя',\n    sex: 'Муж.',\n    phone: '079652374',\n    salary: 3599,\n    avans: 0\n  },\n  {\n    name: 'Ваня',\n    sex: 'Муж.',\n    phone: '079652374',\n    salary: 3599,\n    avans: 600\n  },\n  {\n    name: 'Гриша',\n    sex: 'Муж.',\n    phone: '079652374',\n    salary: 3599,\n    avans: 0\n  },\n  {\n    name: 'Саша',\n    sex: 'Муж.',\n    phone: '079652374',\n    salary: 3599,\n    avans: 200\n  },\n  {\n    name: 'Дима',\n    sex: 'Муж.',\n    phone: '079652374',\n    salary: 3599,\n    avans: 555\n  },\n  {\n    name: 'Вася',\n    sex: 'Муж.',\n    phone: '079652374',\n    salary: 3599,\n    avans: 1000\n  }\n];\n\nexport const Context = React.createContext<Props>(defaultValue);\n\nexport const ProviderContext = (props: ProviderProps) => {\n  const [salaryList, setSalaryList] = useState<SalaryList[]>([]);\n\n  const children = props.children;\n\n  useEffect(() => {\n    setSalaryList(dataSalaryList);\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        salaryList,\n        setSalaryList\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import * as React from 'react';\nimport { Button } from 'antd';\n\nimport './InventoryList.scss';\n\nexport const InventoryList = () => {\n  const dataInventory = [\n    {\n      name: 'Дрель',\n      quantity: 10,\n      price: 1000\n    },\n    {\n      name: 'Машина Dacia Logan',\n      quantity: 5,\n      price: 41000\n    },\n    {\n      name: 'Перфоратор',\n      quantity: 6,\n      price: 1400\n    },\n    {\n      name: 'Дрель Ч',\n      quantity: 10,\n      price: 1000\n    },\n    {\n      name: 'Дрель В',\n      quantity: 10,\n      price: 1000\n    },\n    {\n      name: 'Дрель Ф',\n      quantity: 10,\n      price: 1000\n    }\n  ];\n\n  return (\n    <div className=\"inventory-list\">\n      <div className=\"title\">\n        <div className=\"title__text\">Список инвентаря</div>\n        <Button className=\"add-button\">Добавить</Button>\n      </div>\n      <div className=\"item_list\">\n        {dataInventory.map((item, index) => (\n          <div className=\"inventory-item\" key={index}>\n            <div className=\"inventory-item__name\">{item.name}</div>\n            <div className=\"inventory-item__quantity\">\n              Колличество - {item.quantity}\n            </div>\n            <div className=\"inventory-item__price\">\n              Ценна 1шт.- {item.price}\n            </div>\n            <div className=\"button-edit-inventory\">\n              <Button>Редактировать</Button>\n            </div>\n            <div className=\"button-delete-inventory\">\n              <Button>Удалить</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\n\nimport './ObjectList.scss';\n\nexport const ObjectList = () => {\n  const objectList = [\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    }\n  ];\n\n  return (\n    <div className=\"object-list\">\n      <div className=\"object-list__title\">Список обьектов</div>\n      <div className=\"object-list__items\">\n        {objectList.map((item, index) => (\n          <div className=\"object_item\" key={index}>\n            <div className=\"object_item__title\">\n              <span>Название: {item.object_name}</span>\n              <div className=\"buttons-group\">\n                <NavLink\n                  to=\"/admin_menu/edit_object\"\n                  activeClassName=\"selected\"\n                >\n                  <Button className=\"close-object\">Редактировать</Button>\n                </NavLink>\n                <NavLink\n                  to=\"/admin_menu/edit_object_worker_time\"\n                  activeClassName=\"selected\"\n                >\n                  <Button className=\"close-object\">Время +/-</Button>\n                </NavLink>\n                <Button className=\"close-object\">Закрыть</Button>\n              </div>\n            </div>\n            <div className=\"object_item__description\">\n              <span>Описание объекта</span>\n              <br />\n              {item.object_description}\n            </div>\n            <div className=\"object_item__workers\">\n              <div className=\"workers-list\">\n                <span>Список работников</span>\n                <ul>\n                  {item.object_workers.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <div className=\"object_work-detail\">\n              <span>Описание работ</span>\n\n              {item.object_work_description.map((item: any) => (\n                <div className=\"object_work-detail__description\">\n                  <span>{item.work}</span> - {item.quantity}шт - {item.price}\n                  лей.\n                </div>\n              ))}\n\n              <span>Описание материалов</span>\n\n              {item.object_work_material.map((item: any) => (\n                <div className=\"object_work-detail__description\">\n                  <span>{item.title}</span> - {item.quantity}шт - {item.price}\n                  лей.\n                </div>\n              ))}\n\n              {/* <div className=\"object_work-detail__price\">\n                Примерно {item.object_work_detail_price} лей.\n              </div> */}\n            </div>\n            <div className=\"object_avans\">\n              Аванс {item.object_work_avans} лей.\n            </div>\n            <div className=\"object_price\">\n              Стоимость обьекта {item.object_work_price} лей.\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Context } from 'components/context/Context';\nimport { Button } from 'antd';\nimport './SalaryList.scss';\n\nexport const SalaryList = () => {\n  const [allSalary, setAllSalary] = React.useState<number>(0);\n  const [allAvans, setAllAvans] = React.useState<number>(0);\n  const { salaryList } = React.useContext(Context);\n\n  const salaryResultItem = (x: number, y: number) => {\n    return x - y;\n  };\n\n  const salaryRemain = () => {\n    return allSalary - allAvans;\n  };\n\n  React.useEffect(() => {\n    setAllAvans(salaryList.reduce((total, item) => total + item.avans, 0));\n    setAllSalary(salaryList.reduce((total, item) => total + item.salary, 0));\n  }, [salaryList]);\n\n  return (\n    <div className=\"salary-list\">\n      <div className=\"title\">\n        <div className=\"title__text\">Список зарплат</div>\n        <div className=\"title__period\">Период 01.02.2021 - 01.03.2021</div>\n      </div>\n      <div className=\"item_list\">\n        {salaryList.map((item, index) => (\n          <div className=\"salary-item\" key={index}>\n            <div className=\"salary-item__name\">\n              {item.name}\n              <span>{item.sex}</span>\n              <span>Тел. {item.phone}</span>\n            </div>\n            <div className=\"salary-item__salary\">Зарплата - {item.salary}</div>\n            <div className=\"salary-item__avans\">Аванс - {item.avans}</div>\n            <div className=\"salary-item__result\">\n              Остаток - {salaryResultItem(item.salary, item.avans)}\n            </div>\n            <div className=\"button-avans\">\n              <Button>Аванс</Button>\n            </div>\n            <div className=\"button-salary\">\n              <Button>Выдал ЗП</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"footer\">\n        <div className=\"title__total_number\">{salaryList.length} человек</div>\n        <div className=\"title__total_salary\">\n          <span>\n            Выдал {allAvans} лей. / Осталось {salaryRemain()} лей.\n          </span>\n          <span>Всего к отплате {allSalary} лей.</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Button } from 'antd';\n\nimport './WerehouseList.scss';\n\nexport const WerehouseList = () => {\n  const dataWerehouse = [\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    },\n    {\n      werehouse_name: 'Провод медный 10х3см',\n      werehouse_quantity: 104,\n      werehouse_buy_price: 50,\n      werehouse_sell_price: 35\n    }\n  ];\n  return (\n    <div className=\"werehouse-list\">\n      <div className=\"werehouse-list__title\">\n        <span>Список материалов</span>\n        <Button className=\"add-material\">Добавить</Button>\n      </div>\n      <div className=\"werehouse-list__items\">\n        {dataWerehouse.map((item, index) => (\n          <div className=\"werehouse-item\" key={index}>\n            <div className=\"werehouse-item__name\">{item.werehouse_name}</div>\n            <div className=\"werehouse-item__buy-price\">\n              Ценна покупки - {item.werehouse_buy_price} лей.\n            </div>\n            <div className=\"werehouse-item__sell-price\">\n              Ценна продажи - {item.werehouse_sell_price} лей.\n            </div>\n            <div className=\"werehouse-item__quantity\">\n              Колличество - {item.werehouse_quantity} шт.\n            </div>\n            <div className=\"button-edit-werehouse\">\n              <Button>Редактировать</Button>\n            </div>\n            <div className=\"button-delete-werehouse\">\n              <Button>Удалить</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useRequest } from 'estafette';\nimport { inventoryList } from 'api/inventoryList';\n\nimport './WorkList.scss';\n\nexport const WorkList = () => {\n  // const { request, data, loading, errors } = useRequest();\n  // useEffect(() => {\n  //   request(inventoryList.getInventoryList({}));\n  //   // request(inventoryList.getInventoryList(`http://localhost:8000/inventory/instrument/`));\n  // }, []);\n\n  // console.log(data);\n\n  const dataWorkList = [\n    {\n      name: 'Замена розетки',\n      quantity: 1,\n      price: 100\n    },\n    {\n      name: 'Установка лапочки LED',\n      quantity: 1,\n      price: 200\n    },\n    {\n      name: 'Установка кабеля 100м',\n      quantity: 1,\n      price: 1000\n    },\n    {\n      name: 'Установка шита',\n      quantity: 1,\n      price: 1000\n    },\n    {\n      name: 'Установка рубильника',\n      quantity: 1,\n      price: 500\n    }\n  ];\n\n  return (\n    <div className=\"work-list\">\n      <div className=\"title\">\n        <div className=\"title__text\">Список работ</div>\n        <Button className=\"add-button\">Добавить</Button>\n      </div>\n      <div className=\"item_list\">\n        {dataWorkList.map((item, index) => (\n          <div className=\"work-item\" key={index}>\n            <div className=\"work-item__name\">{item.name}</div>\n            <div className=\"work-item__quantity\">\n              Колличество - {item.quantity}\n            </div>\n            <div className=\"work-item__price\">Ценна - {item.price}</div>\n            <div className=\"button-edit-work\">\n              <Button>Редактировать</Button>\n            </div>\n            <div className=\"button-delete-work\">\n              <Button>Удалить</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Form, Input, Button, Checkbox, Radio, Switch } from 'antd';\n\nimport './AdminCreateUser.scss';\n\ninterface Form {\n  password: string;\n  username: string;\n  remember?: boolean;\n}\n\nexport const AdminCreateUser = () => {\n  const [form, setForm] = React.useState<Form>({ password: '', username: '' });\n\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16\n    }\n  };\n\n  const onFinish = (values: any) => {\n    setForm(values);\n  };\n  console.log('Success:', form);\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <div className=\"create-container\">\n      <h1>Создать пользователя</h1>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: false\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your username!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!'\n            }\n          ]}\n        >\n          <Input type=\"password\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Имя\"\n          name=\"user_name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input username!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"user_sex\"\n          label=\"Пол\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input gender type!'\n            }\n          ]}\n        >\n          <Radio.Group>\n            <Radio value=\"male\">Male</Radio>\n            <Radio value=\"female\">Female</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          label=\"IDNP\"\n          name=\"user_idno\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input idno!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Телефон\"\n          name=\"user_phone\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input phone!'\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"user_value\"\n          label=\"Уровень\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input user value!'\n            }\n          ]}\n        >\n          <Radio.Group>\n            <Radio value={1}>Staff</Radio>\n            <Radio value={2}>Manager</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          label=\"На проценте\"\n          name=\"salary_percent\"\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n\n        <Form.Item label=\"На ставке\" name=\"salary_hour\" valuePropName=\"checked\">\n          <Switch />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Ставка час\"\n          name=\"hour_tax\"\n          rules={[\n            {\n              required: false\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Пароль\"\n          name=\"user_password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input password!'\n            }\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Созадть\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  InputNumber,\n  Select,\n  Tag,\n  Space,\n  Radio\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport './CreateObject.scss';\n\ninterface ObjectForm {\n  object: {\n    object_master: string;\n    object_description: string;\n    object_name: string;\n    object_avans: number;\n    object_worker_list: string[];\n    object_work_total_list: {\n      work: string;\n      quantity: number;\n    };\n  };\n}\n\nexport const CreateObject = () => {\n  const [test, setTest] = React.useState<ObjectForm>();\n  const [value, setValue] = React.useState(0);\n\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n\n  const onChange = (e: any) => {\n    console.log('radio checked', e.target.value);\n    setValue(e.target.value);\n  };\n\n  const validateMessages = {\n    required: '${label} обязательно!'\n  };\n\n  const onFinish = (values: ObjectForm) => {\n    console.log('Received values of form:', values);\n    setTest(values);\n  };\n\n  const workerListOptions = [\n    { value: 'Ваня' },\n    { value: 'Петя' },\n    { value: 'Саша' },\n    { value: 'Дима' }\n  ];\n\n  const workerPriceListOptions = [\n    { value: 'Установка розетки 1' },\n    { value: 'Установка розетки 2' },\n    { value: 'Установка розетки 3' },\n    { value: 'Установка розетки 4' }\n  ];\n\n  const workerRender = (props: any) => {\n    const { label, closable, onClose } = props;\n\n    return (\n      <Tag\n        color={'cyan'}\n        closable={closable}\n        onClose={onClose}\n        style={{ marginRight: 3, marginTop: 3 }}\n      >\n        {label}\n      </Tag>\n    );\n  };\n\n  return (\n    <div className=\"create-object-container\">\n      <h1>Создать рабочий обьект</h1>\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        validateMessages={validateMessages}\n        autoComplete=\"off\"\n        className=\"object-form\"\n      >\n        <Form.Item\n          name={['object', 'object_name']}\n          label=\"Название объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input placeholder=\"Введите название объекта\" />\n        </Form.Item>\n        <Form.Item\n          name={['object', 'object_description']}\n          label=\"Описание объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input.TextArea placeholder=\"Введите описание объекта\" />\n        </Form.Item>\n\n        <Form.Item\n          name={['object', 'object_worker_list']}\n          label=\"Список работников\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Select\n            placeholder={'Выберите работников'}\n            mode=\"multiple\"\n            showArrow\n            tagRender={workerRender}\n            style={{ width: '100%' }}\n            options={workerListOptions}\n          />\n        </Form.Item>\n\n        <div className=\"add-inputs\">\n          <Form.List name={['object', 'object_work_total_list']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'work']}\n                      fieldKey={[field.fieldKey, 'work']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название работы обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workerPriceListOptions}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'quantity']}\n                      fieldKey={[field.fieldKey, 'quantity']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить работу\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.List name={['object', 'object_material_total_list']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'material']}\n                      fieldKey={[field.fieldKey, 'material']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название работы обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workerPriceListOptions}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'quantity']}\n                      fieldKey={[field.fieldKey, 'quantity']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить материалов\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n        </div>\n\n        <Form.Item\n          className=\"avans_field\"\n          name={['object', 'object_avans']}\n          label=\"Аванс\"\n          rules={[\n            {\n              type: 'number',\n              required: true,\n              min: 0,\n              max: 9999999\n            }\n          ]}\n        >\n          <InputNumber placeholder=\"Введите аванс\" />\n        </Form.Item>\n        <Form.Item\n          className=\"radio-percent\"\n          name={['object', 'percent']}\n          label=\"Скидка\"\n        >\n          <Radio.Group onChange={onChange} value={value}>\n            <Radio value={0}>0%</Radio>\n            <Radio value={5}>5%</Radio>\n            <Radio value={10}>10%</Radio>\n            <Radio value={15}>15%</Radio>\n            <Radio value={20}>20%</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item>\n          <div className=\"submit-buttons\">\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"object-submit-btn\"\n            >\n              Создать\n            </Button>\n            <Button>Добавить в ожидания</Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { Context } from 'components/context/Context';\n\nimport './UserList.scss';\n\nexport const UserList = () => {\n  const { salaryList } = React.useContext(Context);\n\n  return (\n    <div className=\"user-list\">\n      <div className=\"title\">\n        <div className=\"title__text\">Список персонала</div>\n        {/* <button className=\"add-button\">Добавить</button> */}\n      </div>\n      <div className=\"item_list\">\n        {salaryList.map((item, index) => (\n          <div className=\"user-item-content\" key={item.name}>\n            <NavLink to=\"/admin_menu/user_profile_add_material\">\n              <div className=\"user-item\">\n                <div className=\"user-item__name\">{item.name}</div>\n                <div className=\"user-item__quantity\">Телефон: {item.phone}</div>\n                <div className=\"user-item__price\">\n                  Мат. на сумму : 14550 лей.\n                </div>\n                {/* <div className=\"button-edit-user\">\n                            <button>Редактировать</button>\n                        </div> */}\n                {/* <div className=\"button-delete-user\">\n                            <button>Удалить</button>\n                        </div> */}\n              </div>\n            </NavLink>\n            <div className=\"button-edit-user\">\n              <NavLink to=\"/admin_menu/user_profile_edit_material\">\n                <Button>\n                  <span>Редактировать</span>\n                </Button>\n              </NavLink>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nimport './UserProfile.scss';\n\nexport const UserProfile = () => {\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n  };\n\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!'\n    }\n  };\n\n  const onFinish = (values: any) => {\n    console.log(values);\n  };\n\n  return (\n    <div className=\"user-profile\">\n      <h1>Профиль работника</h1>\n      <div className=\"user-profile-content\">\n        <div className=\"user-detail-form\">\n          <Form\n            {...layout}\n            name=\"nest-messages\"\n            onFinish={onFinish}\n            validateMessages={validateMessages}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              name={['user', 'name']}\n              label=\"Name\"\n              rules={[{ required: true }]}\n            >\n              <Input placeholder=\"Вова\" disabled />\n            </Form.Item>\n            <Form.Item\n              name={['user', 'idnp']}\n              label=\"IDNP\"\n              rules={[{ type: 'email' }]}\n            >\n              <Input placeholder=\"35214566985524\" />\n            </Form.Item>\n            <Form.Item name={['user', 'phone']} label=\"Phone\">\n              <Input placeholder=\"+069431495\" />\n            </Form.Item>\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Сохранить\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n\n        <div className=\"inventory-mat-review\">\n          <div className=\"material-review\">\n            <span>Список материалов</span>\n            <ul className=\"material-list\">\n              <li>Провод 100м х 3шт.</li>\n              <li>Лампочка 100В х 10шт.</li>\n              <li>Розетка х 10шт.</li>\n              <li>Лампочка LED х 10шт.</li>\n              <li>Провод 23с х 20шт.</li>\n            </ul>\n          </div>\n          <div className=\"inventory-review\">\n            <span>Список инвентаря</span>\n            <ul className=\"inventory-list\">\n              <li>Машина Dacia Logan x 1шт.</li>\n              <li>Дрель x 1шт.</li>\n              <li>Набор ключей х 1шт.</li>\n              <li>Набор отверток х 1шт.</li>\n              <li>Ключ разводной х 1шт.</li>\n            </ul>\n          </div>\n          <div className=\"object-review\">\n            <span>Список обьектов</span>\n            <ul className=\"object-list\">\n              <li>Ларёк - 24 час / 17лей = 600 лей</li>\n              <li>Дом - 12 час / 17лей = 300 лей</li>\n              <li>Кухня - 20 час / 17лей = 400 лей</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, Button, InputNumber, Select, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport './ProfileAddMat.scss';\n\nexport const ProfileAddMat = () => {\n  const onFinish = (values: any) => {\n    console.log('Received values of form:', values);\n  };\n\n  const materialList = [\n    { value: 'Провод' },\n    { value: 'Лампочка' },\n    { value: 'Шурупы' },\n    { value: 'Розетка' }\n  ];\n\n  const inventoryList = [\n    { value: 'Машина Dacia Logan' },\n    { value: 'Дрель' },\n    { value: 'Набор ключей' },\n    { value: 'Набор отверток' }\n  ];\n\n  return (\n    <div className=\"add-mat-container\">\n      <div className=\"user-info\">\n        <h1>Профиль работника</h1>\n        <ul>\n          <li>User name: Вова</li>\n          <li>IDNP: 213123123213</li>\n          <li>Phone: +655634343</li>\n        </ul>\n      </div>\n\n      <Form\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        className=\"add-form\"\n      >\n        <Form.List name={['user', 'user_profile_material']}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'material']}\n                    fieldKey={[field.fieldKey, 'material']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Название работы обязательно!'\n                      }\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Выберите\"\n                      showArrow\n                      className=\"profile-select\"\n                      options={materialList}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'quantity']}\n                    fieldKey={[field.fieldKey, 'quantity']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Количество не меньше 0',\n                        min: 0,\n                        max: 999,\n                        type: 'number'\n                      }\n                    ]}\n                  >\n                    <InputNumber placeholder=\"кол-во\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Добавить материалы\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n\n        <Form.List name={['user', 'user_profile_inventory']}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'inventory']}\n                    fieldKey={[field.fieldKey, 'inventory']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Название работы обязательно!'\n                      }\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Выберите\"\n                      showArrow\n                      className=\"profile-select\"\n                      options={inventoryList}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'quantity']}\n                    fieldKey={[field.fieldKey, 'quantity']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Количество не меньше 0',\n                        min: 0,\n                        max: 999,\n                        type: 'number'\n                      }\n                    ]}\n                  >\n                    <InputNumber placeholder=\"кол-во\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Добавить инвентаря\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"add-submit-btn\">\n            Добавить\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, InputNumber, Button } from 'antd';\n\nimport './ProfileEditMat.scss';\n\nexport const ProfileEditMat = () => {\n  const materialList = [\n    { value: 'Провод' },\n    { value: 'Лампочка' },\n    { value: 'Шурупы' },\n    { value: 'Розетка' }\n  ];\n\n  const inventoryList = [\n    { value: 'Машина Dacia Logan' },\n    { value: 'Дрель' },\n    { value: 'Набор ключей' },\n    { value: 'Набор отверток' }\n  ];\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form:', values);\n  };\n\n  return (\n    <div className=\"profile-edit-material\">\n      <div className=\"edit-material\">\n        <Form onFinish={onFinish}>\n          <h1>Список материалов</h1>\n          {materialList.map((item) => (\n            <Form.Item\n              className=\"material-container\"\n              key={item.value}\n              name={['materials', `${item.value}`]}\n            >\n              <div className=\"material-item\">\n                <span>{item.value}</span>\n                <InputNumber placeholder=\"кол-во\" />\n              </div>\n            </Form.Item>\n          ))}\n          <h1>Список инвентаря</h1>\n          {inventoryList.map((item) => (\n            <Form.Item\n              className=\"inventory-container\"\n              key={item.value}\n              name={['materials', `${item.value}`]}\n            >\n              <div className=\"inventory-item\">\n                <span>{item.value}</span>\n                <InputNumber placeholder=\"кол-во\" />\n              </div>\n            </Form.Item>\n          ))}\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"object-submit-btn\"\n            >\n              Сохранить\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\n\nimport './WaitingObjectList.scss';\n\nexport const WaitingObjectList = () => {\n  const objectList = [\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    },\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description:\n        'провести, счетчик смотать или левый свет замутить',\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    }\n  ];\n\n  return (\n    <div className=\"waiting-object-list\">\n      <div className=\"waiting-object-list__title\">\n        Список ожидаемых обьектов\n      </div>\n      <div className=\"waiting-object-list__items\">\n        {objectList.map((item, index) => (\n          <div className=\"waiting-object_item\" key={index}>\n            <div className=\"waiting-object_item__title\">\n              <span>Название: {item.object_name}</span>\n              <div className=\"buttons-group\">\n                <Button className=\"close-object\">Добавить</Button>\n                <NavLink\n                  to=\"/admin_menu/edit_object\"\n                  activeClassName=\"selected\"\n                >\n                  <Button className=\"close-object\">Редактировать</Button>\n                </NavLink>\n                <Button className=\"close-object\">Удалить</Button>\n              </div>\n            </div>\n            <div className=\"waiting-object_item__description\">\n              <span>Описание объекта</span>\n              <br />\n              {item.object_description}\n            </div>\n            <div className=\"waiting-object_item__workers\">\n              <div className=\"workers-list\">\n                <span>Список работников</span>\n                <ul>\n                  {item.object_workers.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <div className=\"waiting-object_work-detail\">\n              <span>Описание работ</span>\n              <div className=\"waiting-object_work-detail__description\">\n                {item.object_work_description}\n              </div>\n\n              <span>Описание материалов</span>\n              <div className=\"waiting-object_work-detail__description\">\n                {item.object_work_description}\n              </div>\n              {/* <div className=\"object_work-detail__price\">\n                            Примерно {item.object_work_detail_price} лей.\n                        </div> */}\n            </div>\n            <div className=\"waiting-object_avans\">\n              Аванс {item.object_work_avans} лей.\n            </div>\n            <div className=\"waiting-object_price\">\n              Стоимость обьекта {item.object_work_price} лей.\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  InputNumber,\n  Select,\n  Tag,\n  Space,\n  Radio\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport './EditObject.scss';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\ninterface ObjectForm {\n  object: {\n    object_master: string;\n    object_description: string;\n    object_name: string;\n    object_avans: number;\n    object_worker_list: string[];\n    object_work_list: {\n      work: string;\n      quantity: number;\n    };\n    object_material_list: {\n      material: string;\n      quantity: number;\n    };\n  };\n}\n\nexport const EditObject = () => {\n  const [test, setTest] = React.useState<ObjectForm>();\n  const [value, setValue] = React.useState(0);\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n\n  const validateMessages = {\n    required: '${label} обязательно!'\n  };\n\n  const onFinish = (values: ObjectForm) => {\n    console.log('Received values of form:', values);\n    setTest(values);\n  };\n\n  console.log(test);\n\n  const workerListOptions = [\n    { value: 'Ваня' },\n    { value: 'Петя' },\n    { value: 'Саша' },\n    { value: 'Дима' }\n  ];\n\n  const workerPriceListOptions = [\n    { value: 'Установка розетки 1' },\n    { value: 'Установка розетки 2' },\n    { value: 'Установка розетки 3' },\n    { value: 'Установка розетки 4' }\n  ];\n\n  const workerRender = (props: any) => {\n    const { label, closable, onClose } = props;\n\n    return (\n      <Tag\n        color={'cyan'}\n        closable={closable}\n        onClose={onClose}\n        style={{ marginRight: 3, marginTop: 3 }}\n      >\n        {label}\n      </Tag>\n    );\n  };\n\n  const onChange = (event: RadioChangeEvent) => {\n    console.log('radio checked', event.target.value);\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"edit-object-container\">\n      <h1>Редактировать рабочий обьект</h1>\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish}\n        validateMessages={validateMessages}\n        autoComplete=\"off\"\n        className=\"object-form\"\n      >\n        <Form.Item\n          name={['object', 'object_name']}\n          label=\"Название объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input placeholder=\"Введите название объекта\" />\n        </Form.Item>\n        <Form.Item\n          name={['object', 'object_description']}\n          label=\"Описание объекта\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Input.TextArea placeholder=\"Введите описание объекта\" />\n        </Form.Item>\n\n        <Form.Item\n          name={['object', 'object_worker_list']}\n          label=\"Список работников\"\n          rules={[\n            {\n              required: true\n            }\n          ]}\n        >\n          <Select\n            placeholder={'Выберите работников'}\n            mode=\"multiple\"\n            showArrow\n            tagRender={workerRender}\n            style={{ width: '100%' }}\n            options={workerListOptions}\n          />\n        </Form.Item>\n\n        <div className=\"add-inputs\">\n          <Form.List name={['object', 'object_work_list']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'work']}\n                      fieldKey={[field.fieldKey, 'work']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название работы обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workerPriceListOptions}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'quantity']}\n                      fieldKey={[field.fieldKey, 'quantity']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить работу\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.List name={['object', 'object_material_list']}>\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map((field) => (\n                  <Space\n                    key={field.key}\n                    style={{ display: 'flex', marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'material']}\n                      fieldKey={[field.fieldKey, 'material']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Название материалов обязательно!'\n                        }\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Выберите\"\n                        showArrow\n                        tagRender={workerRender}\n                        className=\"select-materials\"\n                        options={workerPriceListOptions}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'quantity']}\n                      fieldKey={[field.fieldKey, 'quantity']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Количество не меньше 0',\n                          min: 0,\n                          max: 999,\n                          type: 'number'\n                        }\n                      ]}\n                    >\n                      <InputNumber placeholder=\"кол-во\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Добавить материалы\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n        </div>\n\n        <Form.Item\n          name={['object', 'object_avans']}\n          label=\"Аванс\"\n          rules={[\n            {\n              type: 'number',\n              required: true,\n              min: 0,\n              max: 9999999\n            }\n          ]}\n        >\n          <InputNumber placeholder=\"Введите аванс\" />\n        </Form.Item>\n\n        <Form.Item name={['object', 'object_discount']} label=\"Скидка\">\n          <Radio.Group onChange={onChange} value={value} name=\"salary_percent\">\n            <Radio value={0}>0%</Radio>\n            <Radio value={5}>5%</Radio>\n            <Radio value={10}>10%</Radio>\n            <Radio value={15}>15%</Radio>\n            <Radio value={20}>20%</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item>\n          <div className=\"submit-buttons\">\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"object-submit-btn\"\n            >\n              Сохранить\n            </Button>\n\n            <Button>Очистить форму</Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Form, InputNumber, Select, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport './AddWorkerTime.scss';\n\nexport const AddWorkerTime = () => {\n  const workerListOptions = [\n    { value: 'Ваня' },\n    { value: 'Петя' },\n    { value: 'Саша' },\n    { value: 'Дима' }\n  ];\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form:', values);\n  };\n\n  return (\n    <div className=\"worker-time-container\">\n      <h1>Выставить время на объекте</h1>\n      <Form onFinish={onFinish}>\n        <Form.List name={['object', 'object_worker_time']}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'name']}\n                    fieldKey={[field.fieldKey, 'name']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Название работы обязательно!'\n                      }\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Выберите\"\n                      showArrow\n                      className=\"time-select\"\n                      options={workerListOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'hour']}\n                    fieldKey={[field.fieldKey, 'hour']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Количество не меньше 0',\n                        min: 0,\n                        max: 999,\n                        type: 'number'\n                      }\n                    ]}\n                  >\n                    <InputNumber placeholder=\"кол-во\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Добавить время работнику\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"object-submit-btn\"\n          >\n            Сохранить\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\n\nimport './CurrentObject.scss';\n\nexport const CurrentObject = () => {\n  const objectList = [\n    {\n      object_name: 'Ларёк',\n      object_description:\n        'Описание обьекта. Ларёк или будка или хз что там Федя чинит, провода провести, счетчик смотать или левый свет замутить, как то так!',\n      object_workers: ['Петя', 'Вася', 'Женя'],\n      object_work_description: [\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' },\n        { work: 'Замена розетки', price: '100', quantity: '5' }\n      ],\n      object_work_material: [\n        { title: 'Провод 20/3', price: '50', quantity: '2' },\n        { title: 'Розетка', price: '70', quantity: '5' }\n      ],\n      object_work_detail_price: 1440,\n      object_work_avans: 0,\n      object_work_price: 1440\n    }\n  ];\n\n  return (\n    <div className=\"current-object-list\">\n      <div className=\"current-object-list__title\">Список текущих обьектов</div>\n      <div className=\"current-object-list__items\">\n        {objectList.map((item, index) => (\n          <div className=\"current-object_item\" key={index}>\n            <div className=\"current-object_item__title\">\n              <span className=\"object-name\">Название: {item.object_name}</span>\n\n              <div className=\"buttons-group\">\n                <NavLink\n                  to=\"/admin_menu/edit_object\"\n                  activeClassName=\"selected\"\n                >\n                  <Button className=\"close-object\">Редактировать</Button>\n                </NavLink>\n                <NavLink\n                  to=\"/admin_menu/edit_object_worker_time\"\n                  activeClassName=\"selected\"\n                >\n                  <Button className=\"close-object\">Время +/-</Button>\n                </NavLink>\n                <Button className=\"close-object\">Закрыть???</Button>\n              </div>\n            </div>\n            <div className=\"current-object_item__description\">\n              <span>Описание объекта</span>\n              <br />\n              {item.object_description}\n            </div>\n            <div className=\"current-object_item__workers\">\n              <div className=\"workers-list\">\n                <span>Список работников</span>\n                <ul>\n                  {item.object_workers.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n            <div className=\"current-object_work-detail\">\n              <span>Описание работ</span>\n              {item.object_work_description.map((item: any) => (\n                <div className=\"current-object_work-detail__description\">\n                  <span>{item.work}</span> - {item.quantity}шт - {item.price}\n                  лей.\n                </div>\n              ))}\n\n              <span>Описание материалов</span>\n              {item.object_work_material.map((item: any) => (\n                <div className=\"current-object_work-detail__description\">\n                  <span>{item.title}</span> - {item.quantity}шт - {item.price}\n                  лей.\n                </div>\n              ))}\n\n              {/* <div className=\"object_work-detail__price\">\n                            Примерно {item.object_work_detail_price} лей.\n                        </div> */}\n            </div>\n            <div className=\"current-object_avans\">\n              Аванс {item.object_work_avans} лей.\n            </div>\n            <div className=\"current-object_price\">\n              Стоимость обьекта {item.object_work_price} лей.\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport { Dropdown, Button, Menu, message } from 'antd';\nimport {\n  AppstoreOutlined,\n  ContainerOutlined,\n  DesktopOutlined,\n  DownOutlined,\n  MailOutlined,\n  MenuUnfoldOutlined,\n  PieChartOutlined\n} from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { InventoryList } from 'components/molecules/InventoryList/InventoryList';\nimport { ObjectList } from 'components/molecules/ObjectList/ObjectList';\nimport { SalaryList } from 'components/molecules/SalaryList/SalaryList';\nimport { WerehouseList } from 'components/molecules/WerehouseList/WerehouseList';\nimport { WorkList } from 'components/molecules/WorkList/WorkList';\nimport { AdminCreateUser } from 'components/molecules/AdminCreateUser/AdminCreateUser';\nimport { CreateObject } from 'components/molecules/CreateObject/CreateObject';\nimport { UserList } from 'components/molecules/UserList/UserList';\nimport { UserProfile } from 'components/molecules/UserProfile/UserProfile';\nimport { ProfileAddMat } from 'components/molecules/ProfileAddMat/ProfileAddMat';\nimport { ProfileEditMat } from 'components/molecules/ProfileEditMat/ProfileEditMat';\nimport { WaitingObjectList } from 'components/molecules/WaitingObjectList/WaitingObjectList';\nimport { EditObject } from 'components/molecules/EditObject/EditObject';\nimport { AddWorkerTime } from 'components/molecules/AddWorkerTime/AddWorkerTime';\nimport { CurrentObject } from 'components/molecules/CurrentObject/CurrentObject';\n\nimport './AdminMenu.scss';\n\nexport const AdminMenu = () => {\n  const [showMenu, setShowMenu] = React.useState<boolean>(false);\n  const mediaMenu = React.useRef<any>();\n\n  const closeMenu = () => {\n    setShowMenu((prevState) => !prevState);\n  };\n\n  window.onclick = (event: any) => {\n    if (event.target.matches('.menu-bg')) {\n      setShowMenu(false);\n    }\n  };\n\n  const handleMenuClick = (e: any) => {\n    message.info('Click on menu item.');\n    console.log('click', e);\n  };\n\n  const menu1 = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"1\">\n        <NavLink to=\"/admin_menu/inventory_list\" activeClassName=\"selected\">\n          <span>Список инвентаря</span>\n        </NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <NavLink to=\"/admin_menu/werehouse_list\" activeClassName=\"selected\">\n          <span>Список материалов</span>\n        </NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"3\">\n        <NavLink to=\"/admin_menu/user_list\" activeClassName=\"selected\">\n          <span>Список персонала</span>\n        </NavLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  const menu2 = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"4\">\n        <NavLink to=\"/admin_menu/salary_list\" activeClassName=\"selected\">\n          <span>Список зарплат</span>\n        </NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"5\">\n        <NavLink to=\"/admin_menu/object_list\" activeClassName=\"selected\">\n          <span>Список обьектов</span>\n        </NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"6\">\n        <NavLink\n          to=\"/admin_menu/object_waiting_list\"\n          activeClassName=\"selected\"\n        >\n          <span>Cписок ожидания</span>\n        </NavLink>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <>\n      {showMenu && <div className=\"menu-bg\"></div>}\n      <div className=\"container\">\n        <div className=\"company-logo\">\n          <img src=\"../assets/img/logo.png\" alt=\"logo\" />\n        </div>\n        <div className=\"header\">\n          <div className=\"header-line\">\n            <Button>\n              <NavLink to=\"/admin_menu/user_profile\" activeClassName=\"selected\">\n                Admin\n              </NavLink>\n            </Button>\n            <Button>\n              <NavLink\n                to=\"/admin_menu/curent_object\"\n                activeClassName=\"selected\"\n              >\n                Текущие объекты\n              </NavLink>\n            </Button>\n            <Button>\n              <NavLink\n                to=\"/admin_menu/create_object\"\n                activeClassName=\"selected\"\n              >\n                Создать объект\n              </NavLink>\n            </Button>\n            <Button>\n              <NavLink\n                to=\"/admin_menu/work_price_list\"\n                activeClassName=\"selected\"\n              >\n                Список работ\n              </NavLink>\n            </Button>\n            <Button>\n              <NavLink to=\"/admin_menu/create_user\" activeClassName=\"selected\">\n                Создать пользователя\n              </NavLink>\n            </Button>\n\n            <Dropdown overlay={menu2}>\n              <Button>\n                Списки Зп./Объе./Ожид. <DownOutlined />\n              </Button>\n            </Dropdown>\n\n            <Dropdown overlay={menu1}>\n              <Button>\n                Списки Инв./Мат./Пер. <DownOutlined />\n              </Button>\n            </Dropdown>\n          </div>\n          <div className=\"media-menu\" style={{ width: 300 }}>\n            <Button\n              className={`menu-btn ${showMenu ? 'active-btn' : 'disabled-btn'}`}\n              type=\"primary\"\n              onClick={closeMenu}\n              style={{ marginBottom: 16 }}\n            >\n              Меню\n            </Button>\n\n            {showMenu && (\n              <Menu\n                mode=\"inline\"\n                theme=\"light\"\n                className=\"media-menu-options\"\n                ref={mediaMenu}\n              >\n                <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n                  <NavLink\n                    to=\"/admin_menu/user_profile\"\n                    activeClassName=\"selected\"\n                  >\n                    Admin\n                  </NavLink>\n                </Menu.Item>\n\n                <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n                  <NavLink\n                    to=\"/admin_menu/curent_object\"\n                    activeClassName=\"selected\"\n                  >\n                    Текущие объекты\n                  </NavLink>\n                </Menu.Item>\n\n                <Menu.Item key=\"3\" icon={<ContainerOutlined />}>\n                  <NavLink\n                    to=\"/admin_menu/create_object\"\n                    activeClassName=\"selected\"\n                  >\n                    Создать объект\n                  </NavLink>\n                </Menu.Item>\n\n                <Menu.Item key=\"4\" icon={<ContainerOutlined />}>\n                  <NavLink\n                    to=\"/admin_menu/work_price_list\"\n                    activeClassName=\"selected\"\n                  >\n                    Список работ\n                  </NavLink>\n                </Menu.Item>\n\n                <Menu.Item key=\"5\" icon={<ContainerOutlined />}>\n                  <NavLink\n                    to=\"/admin_menu/create_user\"\n                    activeClassName=\"selected\"\n                  >\n                    Создать пользователя\n                  </NavLink>\n                </Menu.Item>\n\n                <SubMenu\n                  key=\"sub1\"\n                  icon={<MailOutlined />}\n                  title=\"Списки Зп./Объе./Ожид.\"\n                >\n                  <Menu.Item key=\"6\">\n                    <NavLink\n                      to=\"/admin_menu/inventory_list\"\n                      activeClassName=\"selected\"\n                    >\n                      <span>Список инвентаря</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"7\">\n                    <NavLink\n                      to=\"/admin_menu/werehouse_list\"\n                      activeClassName=\"selected\"\n                    >\n                      <span>Список материалов</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"8\">\n                    <NavLink\n                      to=\"/admin_menu/user_list\"\n                      activeClassName=\"selected\"\n                    >\n                      <span>Список персонала</span>\n                    </NavLink>\n                  </Menu.Item>\n                </SubMenu>\n\n                <SubMenu\n                  key=\"sub2\"\n                  icon={<AppstoreOutlined />}\n                  title=\"Списки Инв./Мат./Пер.\"\n                >\n                  <Menu.Item key=\"9\">\n                    <NavLink\n                      to=\"/admin_menu/salary_list\"\n                      activeClassName=\"selected\"\n                    >\n                      <span>Список зарплат</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"10\">\n                    <NavLink\n                      to=\"/admin_menu/object_list\"\n                      activeClassName=\"selected\"\n                    >\n                      <span>Список обьектов</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"11\">\n                    <NavLink\n                      to=\"/admin_menu/object_waiting_list\"\n                      activeClassName=\"selected\"\n                    >\n                      <span>Cписок ожидания</span>\n                    </NavLink>\n                  </Menu.Item>\n                </SubMenu>\n              </Menu>\n            )}\n          </div>\n        </div>\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/admin_menu/curent_object\" exact>\n              <CurrentObject />\n            </Route>\n            <Route path=\"/admin_menu/edit_object\" exact>\n              <EditObject />\n            </Route>\n            <Route path=\"/admin_menu/edit_object_worker_time\" exact>\n              <AddWorkerTime />\n            </Route>\n            <Route path=\"/admin_menu/user_profile_edit_material\" exact>\n              <ProfileEditMat />\n            </Route>\n            <Route path=\"/admin_menu/object_waiting_list\" exact>\n              <WaitingObjectList />\n            </Route>\n            <Route path=\"/admin_menu/user_profile_add_material\" exact>\n              <ProfileAddMat />\n            </Route>\n            <Route path=\"/admin_menu/user_profile\" exact>\n              <UserProfile />\n            </Route>\n            <Route path=\"/admin_menu/user_list\" exact>\n              <UserList />\n            </Route>\n            <Route path=\"/admin_menu/salary_list\" exact>\n              <SalaryList />\n            </Route>\n            <Route path=\"/admin_menu/inventory_list\" exact>\n              <InventoryList />\n            </Route>\n            <Route path=\"/admin_menu/object_list\" exact>\n              <ObjectList />\n            </Route>\n            <Route path=\"/admin_menu/werehouse_list\" exact>\n              <WerehouseList />\n            </Route>\n            <Route path=\"/admin_menu/work_price_list\" exact>\n              <WorkList />\n            </Route>\n            <Route path=\"/admin_menu/create_user\" exact>\n              <AdminCreateUser />\n            </Route>\n            <Route path=\"/admin_menu/create_object\" exact>\n              <CreateObject />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\nimport { ProviderContext } from 'components/context/Context';\nimport { Login } from 'components/molecules/Login/Login';\nimport { AdminMenu } from 'components/organisms/AdminMenu/AdminMenu';\nimport { UserMenu } from 'components/organisms/UserMenu/UserMenu';\n\nimport './Main.scss';\n\ninterface LoginForm {\n  login: boolean;\n  userType: string;\n}\n\nexport const Main = () => {\n  const [token, setToken] = React.useState<LoginForm>({\n    login: false,\n    userType: ''\n  });\n\n  const auth = (login: boolean, userType: string) => {\n    setToken({ login: login, userType: userType });\n  };\n\n  return (\n    <ProviderContext>\n      <BrowserRouter>\n        <AdminMenu />\n        {/* {token.login ? (\n          <>\n            {token.userType === 'admin1' ? (\n              <>\n                <AdminMenu />\n                <Redirect to=\"/admin_menu\" path=\"/admin_menu\" />\n              </>\n            ) : (\n              <>\n                <UserMenu />\n                <Redirect to=\"/user_menu\" path=\"/user_menu\" />\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Redirect to=\"/\" />\n              <Login auth={auth} />\n            </Route>\n          </>\n        )} */}\n      </BrowserRouter>\n    </ProviderContext>\n  );\n};\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Main } from 'components/templates/Main/Main';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}